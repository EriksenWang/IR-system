{
    "title": "Automated Handwashing Assistance For Persons With Dementia Using Video And A Partially Observable Markov Decision Process",
    "publication_date": "2009-01-22",
    "authors": [
        {
            "full_name": "Jesse Hoey",
            "firstname": "Jesse",
            "lastname": "Hoey",
            "affiliations": [
                {
                    "organization": "School of Computing, University of Dundee",
                    "address": {}
                }
            ]
        },
        {
            "full_name": "Pascal Poupart",
            "firstname": "Pascal",
            "lastname": "Poupart",
            "affiliations": []
        },
        {
            "full_name": "Axel Von Bertoldi",
            "firstname": "Axel",
            "lastname": "Von Bertoldi",
            "affiliations": [
                {
                    "organization": "Dept. of Occupational Science and Occupational Therapy, University of Toronto c David R",
                    "address": {
                        "city": "Cheriton"
                    }
                }
            ]
        },
        {
            "full_name": "Tammy Craig",
            "firstname": "Tammy",
            "lastname": "Craig",
            "affiliations": [
                {
                    "organization": "Dept. of Occupational Science and Occupational Therapy, University of Toronto c David R",
                    "address": {
                        "city": "Cheriton"
                    }
                }
            ]
        },
        {
            "full_name": "Craig Boutilier",
            "firstname": "Craig",
            "lastname": "Boutilier",
            "affiliations": [
                {
                    "organization": "Dept. of Computer Science, School of Computing, University of Toronto, University of Dundee",
                    "address": {
                        "city": "Dundee",
                        "country": "Scotland",
                        "postcode": "DD1 4HN"
                    }
                }
            ]
        },
        {
            "full_name": "Alex Mihailidis",
            "firstname": "Alex",
            "lastname": "Mihailidis",
            "affiliations": [
                {
                    "organization": "Dept. of Occupational Science and Occupational Therapy, University of Toronto c David R",
                    "address": {
                        "city": "Cheriton"
                    }
                }
            ]
        }
    ],
    "abstract": "This paper presents a real-time vision-based system to assist a person with dementia wash their hands. The system uses only video inputs, and assistance is given as either verbal or visual prompts, or through the enlistment of a human caregiver's help. The system combines a Bayesian sequential estimation framework for tracking hands and towel, with a decision theoretic framework for computing policies of action. The decision making system is a partially observable Markov decision process, or POMDP. Decision policies dictating system actions are computed in the POMDP using a point-based approximate solution technique. The tracking and decision making systems are coupled using a heuristic method for temporally segmenting the input video stream based on the continuity of the belief state. A key element of the system is the ability to estimate and adapt to user psychological states, such as awareness and responsiveness. We evaluate the system in three ways. First, we evaluate the hand-tracking system by comparing its outputs to manual annotations and to a simple hand-detection method. Second, we test the POMDP solution methods in simulation, and show that our policies have higher expected return than five other heuristic methods. Third, we report results from a ten-week trial with seven persons moderate-to-severe dementia in a long-term care facility in Toronto, Canada. The subjects washed their hands once a day, with assistance given by our automated system, or by a human caregiver, in alternating two-week periods. We give two detailed case study analyses of the system working during trials, and then show agreement between the system and independent human raters of the same trials.",
    "full_text": "Older adults living with cognitive disabilities (such as Alzheimer's disease or other forms of dementia) have difficulty completing activities of daily living (ADLs). Such older adults are usually assisted by a human caregivers, either family members or professionals, who monitor the activity in question and guide or prompt them when necessary. The dependence on a caregiver is difficult for the older adult, and can lead to feelings of anger and helplessness, particularly for private ADLs such as using the washroom. The demands and stress placed on caregivers is also significant due to the need for constant monitoring.\n\nComputerized cognitive assistive technologies (CATs) are devices or systems that have the potential to allow this elderly population to complete such ADLs more independently by monitoring the users during the task, providing guidance or assistance when necessary, and in some cases alerting a caregiver when circumstances warrant. Ideally, such a system or device should be relatively non-invasive (e.g., not require special preparation for the user or constrain the user in any way), promote independent ADL completion (or partial completion) by the user, and relieve the caregiver of the burden of continual monitoring and guidance. This paper presents a real-time system for assisting persons with dementia during handwashing, an important ADL that often poses difficulty with this population. The system described here was built upon three previous versions, each relaxing restrictive assumptions present in its predecessor [1,2]. In particular, the current system removes the need for worn markers to aid visual tracking (as used in [1]) and includes an explicit model of uncertainty not present in [2]. Our system for assisting persons with dementia during handwashing consists of four basic components, as shown in Figure 1. Video from a camera mounted above a sink is input to a system to track objects of interest (e.g., hands and towel). Object positions are passed to a belief monitor that estimates the progress of the user in the task as well as the user's mental state (see below). This is represented as a belief state or distribution over possible task points and mental states. A policy then maps the belief state to a system action: this can be a no-op, an audio or video prompt, or a call for human assistance. The system action is fed back to the belief monitor to enable sequential updates of the belief state. Finally, the prompter plays the prompt or makes the assistance call as appropriate. A key feature of our system is the use of computer vision to ensure that monitoring is as non-invasive or as \"passive\" as possible. The user is not required to perform any special steps while performing an ADL, wear or activate a special device, or otherwise change their routines. Our approach has been motivated in part by the desire to see how far computer vision can be pushed to create such non-invasive assistive technologies.\n\nFor tracking, we use a mixed-state data-driven Bayesian sequential estimation method using flocks of color features [3], which allow objects to be robustly tracked over long periods of time, through large changes in shape and through partial occlusions. Our belief monitoring and policy systems use a partially observable Markov decision process (POMDP). We show how the handwashing task can be modelled using a POMDP, with rewards and costs associated with specific actions and states reflecting their relative value (in terms of task progress, annoyance, inconvenience, etc.). The solution to the POMDP determines a decision policy-that associates actions with specific belief statesthat optimizes long-term expected accumulated reward. The POMDP includes a model of the user's mental state, such as responsiveness or awareness, and allows monitoring of these user traits. We denote these mental states in this paper as the user's attitude. We use a heuristic for the temporal abstraction between tracking and behaviours.\n\nOur previous work has demonstrated the effectiveness of the handtracker [3], a fully observable version of the POMDP model [2], and our initial tests with the current version of the system [4]. This paper expands on the work presented in [4] by showing results of the system performance taken from an eight-week trial of the system working with our target users: six persons with moderate to severe dementia in a long-term care facility in Toronto, Canada. The subjects washed their hands once a day, with assistance given by our automated system, or by a human caregiver, in alternating two-week periods. We give two case study analyses of the system working during trials. We then show the rewards gathered by the system, based on human annotations of the true state during each trial, and we show how the system is able to estimate the user's context and psychological state by comparing the system's state with that given by independent human raters of the same trials. Our clinical findings (i.e. the effect of the system on users) are reported in [5].\n\nThe remainder of this paper is structured as follows. In Section 2, we give details about our computer vision system for tracking hands and towel. Section 3 discusses the POMDP, including specification, belief monitoring, temporal abstraction, and solution methods. Section 4 describes our experiments, and Section 5 shows our results both in simulations and in trials with our target users. Finally, we discuss related and future work and conclude.\n\nTracking an object in the presence of occlusions and distractions is a pervasive problem for computer vision applications. Objects to be tracked usually have some consistent features, are spatially compact, and move cohesively. Typical tracking methods use some model of the appearance of an object to be tracked, and estimate the fit of the model to the object over time. However, in many applications, the object's shape and appearance may change over the course of a sequence. For example, human hands need to be tracked for many human-computer interaction tasks, but change shape and velocity fairly quickly, differences which must be accounted for. The method we present uses a generic type of model: a flock of features [6]. The features are characteristics of the local appearance of the object to be tracked, and they are loosely grouped using flocking constraints.\n\nA flock consists of a group of distinct elements that are similar in appearance and that move congruously, but that can exhibit small individual differences. A flock has the properties that no member is too close to another member, and that no member is too far from the center of the flock. The flocking concept helps to enforce spatial coherence of features across an object, while having enough flexibility to adapt quickly to large shape changes and occlusions. The flock is only a very weak shape model, and adapts the distribution of its members to the current object distribution, which may even be non-contiguous (e.g., in the case of partial occlusions). To allow for very long-term tracking of multiple objects, we use three mixed-state particle filters [7], with data-driven proposals [8] to enable re-initialisation after a track is lost. We use one particle filter for each hand, and one for the towel. This method is robust to partial occlusions, distractors, and shape changes, and is able to consistently track objects over long sequences. Figure 2(a) shows three flocks of 5 color features tracking two hands and a towel. At the start, the members of each flock are distributed across the objects they are tracking. Figures 2(b)-(d) show the same three flocks later in the sequence, during occlusions and shape changes.\n\nThe flocks maintain the track, even though the object shapes have changed.\n\nMore formally, a flock, φ, is a tuple {N f , v, ω f , W, ξ c , ξ u } where N f is the number of features in the flock, v is the mean velocity of the flock, ω f is a global color model for all flock members, W is a set of N f features,\n\ni=1 , with image positions x i , and feature parameters ω i . Finally, the flock has a set of collision parameters ξ c , and a set of union parameters, ξ u . The collision parameters are used to define a function of the distance between members of the flock that indicates when two members are too close. An example is a threshold function, in which case ξ c is a threshold on the distance. The union parameters, ξ u , are similar, except they define when a member is straying from the flock center.\n\nThe likelihood of observing an image z given a flock φ, assumes that each feature generates parts of the image independently,\n\nWe use a simple type of feature, a color speck, which is a set of N s = 4 pixels in a 2 × 2 square, with a local Gaussian color model, ω i = {c i , Σ i }. We use a global Gaussian color model ω f = {c f , Σ f }, and the likelihood of image z, given a speck, w i , in a flock with color model ω f , is a product over N s speck pixels of two Gaussians\n\nwhere z j = z(x j ) is the image color value at speck pixel x j . The i th speck conforms to the flock's color model, ω f , as well as to its own local color distribution through ω i . Finally, a constant \"background\" density, c p , gives better performance under occlusions, allowing some members of the flock to be \"lost\" (e.g., on an occluding object). The parameters γ o and γ c control the tradeoff between the local and global color models.\n\nThis section describes how we can estimate the flock density over time using a sequential Markovian process. Let φ t denote the flock at time t, and z t = {z 1 . . . z t } be the observations (images) up to time t. Tracking is the estimation of the filtering distribution p(φ t |z t ). This distribution is updated sequentially using the standard two-step recursion [9], in which p(φ t |z t ) is updated given p(φ t-1 |z t-1 ) and a new measurement z t .\n\npredict :\n\nupdate :\n\nwhere L(z t |φ t ) is given by Equations 1 and 2, and D(φ t |φ t-1 ) is the transition dynamics of a flock. There are three terms in the dynamics,\n\neach of which describe a flocking behavior. First, due to the dynamics, D s , each feature moves according to the mean velocity of the flock, v, but with added Gaussian noise:\n\nwhere N f is the number of specks in the flock, ∆x = (x t,i -x t-1,i -v t-1 ), v t-1 is the mean velocity of the flock and Σ v is the covariance of the noise in the dynamics, assumed constant for all flock members. The third term in ( 5) is a penalty for being too close to another flock member, and is implemented using pairwise potentials between members of the flock, expressed as a Gibbs distribution\n\nwhere g c (x t,i , x t,j , ξ c ) is a sigmoid penalty function that varies inversely with the distance between x t,i and x t,j , with threshold ξ c . A similar type of penalty function was also used in [10] to model interaction penalties between different particles in a multi-target tracking example.\n\nThe second term in ( 5) is a penalty for being too far from the center of the flock, also implemented using a potential over the feature locations and the flock mean location: ξu) , where x t is the mean position of the flock, and g u (x, x, ξ u ) is a penalty function that is proportional to the distance between x and x, and can be implemented using an inverse sigmoid function.\n\nThe general recursions introduced in the previous section yield closed-form expressions only in a limited number of cases, such as when dynamics and likelihood functions are linear Gaussian. In the general case, we wish to deal with functions that may be non-linear and/or non-Gaussian, and so adopt a sequential Monte-Carlo approximation method, also known as a particle filter [9], in which the target distribution is represented using a weighted set of samples. We use a standard importance sampling method [9], with resampling in cases of degeneracy [11]. We also use a data-driven proposal distribution in order to locate a new object entering the scene, and to find an object to track again after it has been lost. The proposal distribution therefore includes two processes. The first is a commonly used dynamics proposal [12]: the expected mean flock dynamics D s given by Equation (6). The second is a process that generates new samples directly from a new image The complete proposal combines these two distributions with a weight, α, that gives the probability a sample will be drawn from the data-driven proposal [13].\n\nWe sample from this combined proposal by randomly sampling from one of the component distributions according to α. Data samples are re-weighted using a prior weight of (αN p ) -1 , assuming all of the expected αN p particles will be drawn equally, and a null dynamics D 0 (φ t ) = D 0 (φ t )ψ u (φ t )ψ c (φ t ). D 0 includes the collision and union penalty functions, and a prior distribution,\n\n, which is the probability of drawing N f features independently at random from a set of N d possibilities, where N d is the number of valid pixels used in the data proposal.\n\nSamples are drawn from the data by first thresholding the image using a fixed set of thresholds obtained from the global Gaussian color model, ω f , as: c f ± diag(Σ f ). The resulting binary image is median filtered to remove small components. We then remove all components that are unlikely to have arisen from the current filter, or are unlikely to represent a new object a-priori. Finally, we build a normalised map P o (z i |ω f ) = kP r(z i |ω f ) where k is the normalising constant summed over the component being used.\n\nFinally, we draw a flock sample from the joint distribution over the N f feature locations, P r(x N f i=1 |z, θ), by sampling each feature independently from P o , giving a sample\n\ni=1 , ω i are the feature parameters for the image region at x i , and v 0 is drawn from a zero-mean Gaussian distribution with variance σ v (the expected variances of the mean velocity of appearing flocks): v 0 ∼ N (v; 0, σ v I). The flocking parameters are set to be some constant a priori values, ξ c,o , ξ u,o , although in general they could also be computed from the image given the sample.\n\nOnce a new set of samples has been drawn, we set the value of α for the datadriven proposal by looking at the filter's current strength, ν, and whether a connected component was found that corresponds to that filter (denoted by a Boolean comp). The strength, ν, of the particle filter is based on the total (unnormalised) weight of the prior (m * ,p t ) and data (m * ,d t ) particles as:\n\nwhere m * t = m * ,d t +m * ,p t , m + and m -are the maximum and minimum weights, respectively, and the weights are clamped to lie between [0, 1]. If no component was found, then α = 0, since there will be nothing to draw samples from anyways. Otherwise, we set α closer to 0 the higher the strength. If ν > 8, then we set α = 0. In general, α = (comp > 0)(1 -min(1, ν/8)).\n\n(8)\n\nIn our application domain, we wish to track a number of objects simultaneously, such as the hands and the towel. Since the number of objects will be bounded above by a small number (e.g., three), we can simply use independent filtering processes. Each particle filter operates exactly as described above, but if multiple objects have the same global models, ω f , then we will have to slightly modify our assignment procedure for building the data-driven proposals. The idea is that, given a number of connected components in the image, we want to assign components to filtering processes in a suitable way. We do so by computing the distance from each connected component to each filter mean, and adding a small penalty for filter strength, to allow the weaker ininitialise all particles evenly and t = 0, then repeat 1. get new image z t+1 2. smooth image and convert to HSV color space if any filter's strength is small 3.\n\nthreshold HSV color and get connected components 4.\n\nassign components to filters while two filters assigned to same component: 5.\n\nbreak the component in two using K-means 6.\n\nassign components to filters 7.\n\nset α values for all filters (Eqn 8) 8.\n\nconstruct data-driven proposal samples for all filters with α > 0 (Sec. 2.2.1) else 9.\n\nset α to 0 for all filters end if 10. update all filters, compute new strengths (Eqn. 7) 13. t ← t + 1 Fig. 3. Sequential Monte-Carlo algorithm filters more access to new data, all else being equal. Components are then assigned to their closest filter. In some cases, two filters will be assigned to the same component. For example, when the hands are together during rinsing or applying soap, they appear as a single connected component. In such cases, we use a K-means procedure, initialised with the current filter means, to break the large components into two pieces, and then re-assign. We also ensure this happens if the two hand filters are strong and very close together (less than 30 pixels apart), as may sometimes happen if the two hand filters get locked onto the same hand. Finally, we add an interaction penalty to the likelihood function that penalises the two hand trackers for being too close together. When the hands are touching one another, we track this with a single tracker, the other tracker will have a low strength and will be encouraged to look for something else to track. An outline of the algorithm is in Figure 3.\n\nA discrete-time POMDP consists of: a finite set S of states; a finite set A of actions; a stochastic transition model Pr : S × A → ∆(S), with Pr(t|s, a) denoting the probability of moving from state s to t when action a is taken, and ∆(S) is a distribution over S; a finite observation set O; a stochastic observation model with Pr(o|s) denoting the probability of making observation o while the system is in state s; and a reward assigning R(s, a, t) to state transition s to t induced by action a. Intuitively, the system actions cause stochastic state transitions, with different transitions being more or less rewarding (reflecting the relative desirability of the states, the costs of taking actions, or some combination). States cannot be observed exactly: instead the stochastic observation model relates observable signals to the underlying state. The POMDP can be used to monitor beliefs about the system state using standard Bayesian tracking/filtering. A variety of techniques can be used to compute a policy that maximizes (or approximately maximizes) the expected discounted sum of rewards. Since the system state is not known with certainty, a policy maps belief states (i.e., distributions over S) into choices of actions. We refer to [14] for an overview of POMDPs.\n\nThe model we currently use is specified manually, using prior knowledge of the domain. The model was built iteratively on two previous versions, the first a fully observable (MDP) [15] and the second a POMDP evaluated only in simulation [2].\n\nThe handwashing task is modelled as a POMDP with nine state variables, three observation variables, and 25 actions. There are 207360 states and 198 observations. The set of state variables can be divided into three groups: task, attitude and bookkeeping variables. We use the term sequence to denote a single handwashing event, and trial to denote a set of handwashing sequences, possibly on different days over the course of many weeks. Figure 4 shows the POMDP as a Dynamic Bayesian network. Only task and attitude variables are shown, as well as observations, actions, and rewards.\n\nThe task is described by two variables, planstep (PS) and behavior (BE). The plansteps break the handwashing task down into eight situations, each a characterization of the state of the task: are the hands dirty, soapy or clean; are the hands wet or dry; is the water on or off. The plansteps are depicted as nodes in the planstep graph in Figure 5. User behaviors cause transitions in the planstep graph as shown in Figure 5, and correspond to one of six activities: using soap, at water, at tap, at sink, drying, or away. Whereas the planstep is sufficient to characterise the state of the hands, behavior is needed to fully monitor the progress. For example, a user can be in planstep a with hands at the soap (trying to get to planstep e) or at the tap (trying to get to b).\n\nThe user attitude has three factors: dementia level (DL) = {low,med,high}, giving the user's overall level of dementia (low dementia means more demented), awareness (AW) = {never,no,yes}, telling whether the user is aware of what they are doing, and responsiveness (RE) = {none,max,med,min}, giving what type of prompts the user is responsive to. We assume that de- mentia level does not change over a clinical trial (eight weeks). However, as we discuss in Section 3.1, and as we show in our results, our model can be used to estimate a particular user's level of dementia over the course of a clinical trial. A user's responsiveness does not change over the course of a single handwashing sequence, but can change from sequence to sequence (e.g., from day to day). However, the POMDP beliefs can change over the course of a sequence. Finally, the user's awareness can change during a sequence, depending on a number of factors, such as whether she is given prompts, whether a human caregiver intervenes, and also her dementia level. If dementia level is low, the user is less likely to gain awareness. If dementia level is high (less demented), the user is more likely to become and remain aware.\n\nFinally, two book-keeping variables are used.\n\nThe first, last prompt, ensures dry dirty off dirty on dry on soapy dry/wet wet/ tap,~tap? soap,~soap? tap,~tap? soap,~soap? tap,~tap? _,dry tap,~tap? _,dry _,water that the effects of the prompts persist for more than one time interval. This allows for the user to respond to the prompt after two time intervals. The other book-keeping variable, hands washed gives whether the task is complete or not. This is used for the reward function.  1 Prompt categories showing the transitions in the plansteps intended by the prompts (see Figure 5), the different prompts for each category and what the prompt is meant to help the user do.\n\nThere are three types of action the system can take: to do nothing, to prompt, or to call for human assistance. The prompts come in five categories, corre-sponding to the transitions shown in Figure 5, as shown in Table 1. In each category, there are one or two prompts. In the case of turning the taps on or off, or using the soap, there are two prompts. The first is meant to advance the user to the object in question (taps or soap), the second to help them finish that step. Each prompt comes in three levels of specificity: minimal, maximal, and video, giving the level of detail in the prompt. Each prompt is preceded with a reminder that the user is washing their hands. A minimally specific prompt gives a basic verbal instruction (e.g., \"Use the soap now\"). A maximally specific prompt adds the user's name, and more detail (e.g., \"John, use the soap on your left in the pink bottle\"). The video (most specific) prompts add a video demonstration to the maximally specific prompt's audio track.\n\nThere are three observation variables in the model. The planstep observation (PSO) is the caregiver's indication of the planstep after an intervention. The system must gain information after an intervention to avoid repeatedly calling for assistance. The second observation is a timeout (TO) that indicates that the user has not changed behavior for a fixed (long) interval. The hand location observation (HL) comes from the hand tracker as described in Section 2, and gives the current locations of the hands and towel. The mean positions of the three tracks are spatially discretised into a coarse and pre-defined set of areas using threshold distances to each object (e.g., taps, soap), as shown in Figure 6, and combined to form the values for HL. Examples include both at soap and water towel meaning one is at water and one at towel. These observations are conditioned on the behavior through the probability distribution P(hand locs|behavior). We have also investigated methods Fig. 6. Handwashing regions for observation discretisation. These regions have to be manually specified for each sink-soap configuration. The towel region is not used if the towel is being tracked.\n\nfor learning this discretisation automatically using top-down value-directed information from the POMDP, but have not fully integrated these techniques into the working system yet [16].\n\nMapping the actions of the hand tracker to the state of the POMDP requires a form of temporal abstraction. The hand tracker operates at 10-20 frames per second and a new hand location estimate can be made every 50-100 ms. However, it is not appropriate to update the state of the POMDP that quickly. One of the main reasons for this difference is the time scale at which prompting actions themselves occur. A typical prompt (e.g., \"use the soap now, John\"), takes about a second or more to state (depending on its level of specificity). We take this to be a rough estimate of the time scale at which the POMDP should operate. This temporal abstraction step can be integrated into the model directly by adding explicit temporal segmentation variables that can be treated as random variables in the dynamic Bayesian network [17]. However, this imposes an unacceptably large computational burden on POMDP solution techniques by causing an unnecessary blow up in the size of the state space (this holds even when performing belief state monitoring/inference alone). Therefore, we adopted a simple heuristic to decide when the policy should be consulted in the POMDP, and thus when the belief state should be updated.\n\nOur heuristic approach updates the belief state in one of two situations. First, when the hand positions have changed and this change will cause a significant change in the belief state. At each belief state update, the reported hand positions are recorded. At each subsequent frame, the hand positions are compared to those recorded at the previous belief update. If there is any change, then a belief update is simulated, and the resulting, new belief is compared with the previous one using the Kullback-Leibler divergence. If the belief is going to change significantly, then this new belief is tested over a fixed number of frames to make sure that it persists. The fixed number changes based on the planstep, allowing some behaviors to be recognised more quickly. A persistent, new belief triggers a real belief update for the system, a policy lookup, and possibly a system action (prompt).\n\nThe second cause for a belief state update is if the person has not changed her behavior (e.g., has not moved) for a long period of time, termed a timeout. These explicit timeouts are the third observation, and are an indication that the user is not aware. In the POMDP, we condition the timeout observation on the joint pre-and post-action behaviors being identical. Since the behaviors are conditioned on the awareness, a timeout will give evidence for lower awareness.\n\nThere are two important factors in the dynamics of the POMDP. The behavior dynamics is the distribution over behaviors given the current state and the action taken by the system. These reflect the probability that the user will behave (or respond) appropriately given a particular system prompt (or no prompting at all) and the user's responsiveness and awareness levels. The planstep dynamics characterize the distribution over updated plansteps given the previous planstep, an observed behavior pair (pre-and post-action) and the system action taken. These reflect the fact that behaviors cause planstep transitions (see Figure 5). Some transitions (marked with a ? in Figure 5) include the probability that the user has abandoned her attempt to complete the step. For example, if the user is in planstep a, and moves her hands from the taps to the sink, then the probability that she turned the water on may be less than one-she may have abandoned the step of turning on the water. Specific values can be set for particular users and tap/soap configurations.\n\nThe transitions shown in Figure 5 are only for the do nothing action (no prompt). Prompting actions essentially remove transitions that cannot be inferred after a prompt since the user may be responding to a prompt instead of changing behaviors due to a step completion. For example, suppose the user is in planstep a, and that their hands are currently at the tap (they are trying to get the water on). If they are observed to be returning from the tap on their own volition (no prompt), we can assign some probability, say q, to the water having been turned on, based on the user's characteristics and the tap configuration. If, on the other hand, they are observed returning from the tap as a response to a prompt to use the soap, then we can no longer assign q to the water being on, because the prompt makes it much more likely that they abandoned the task in response to the new request to do something different.\n\nThe POMDP model also estimates a particular user's attitude over time. In particular, the model can estimate a user's level of dementia by watching her long-term handwashing behavior over multiple sequences. The ability to estimate user traits allows the model to report such findings to carers, and can also give the model information that can be leveraged in the policy. When a new user starts using the system, the dementia level variable has some prior distribution set based on the population of users. Over the course of each handwashing sequence, this distribution will shift slightly. If we then propagate this information from sequence to sequence (this is the only variable whose information is propagated), then we get a long-term estimate of the user's dementia level. We show examples of this in Section 5.\n\nIt is important to note that the model's estimate of the dementia level variable is not a clinical evaluation of the user's level of dementia, but rather only a functional measure of how independently a user can wash their hands. In this study, we investigate whether any correlation can be noted between this functional measure and the Mini-Mental State Examination (MMSE) results [18]. Given the small quantity of data, we can only make some qualitative evaluations, leaving more quantitative measures to future clinical trials.\n\nThe reward is a combination of three main factors. First, a large reward for task completion (planstep k). Second, prompts are costly, and more specific prompts cost more, due to the inducement of feelings of reduced independence in the user. Prompts are also more costly if the user is more aware. Caregiver calls are expensive if the user is aware or responsive. Third, prompting twice in a row incurs an additional cost.\n\nIn this section, we describe how a policy is computed for a specific POMDP model. The size of our model puts it well beyond the reach of any exact solution techniques. We used the SymbolicPerseus package [19] foot_0 . It implements a point-based approximate solution technique based on the Perseus algorithm [20] combined with Algebraic Decision Diagrams [21] as the underlying data structure. As mentioned earlier, a policy for a POMDP model consists of a mapping from beliefs (e.g., distributions over states) to actions. We denote a belief by b and a policy by π. Assuming an infinite planning horizon and a discount factor (a number γ between 0 and 1 indicating by how much future rewards are reduced), the value V π (b) of a policy for some belief b may be written recursively as follows:\n\nwhere Pr(o|b, a) = s b(s) s Pr(s |s, a) Pr(o|s ), b a,o denotes the belief reached from b after executing a and observing o, and π(b) = a is the action that policy π maps b into. Given a POMDP model, an optimal policy π * is a policy that maximizes the expected sum of discounted rewards (i.e., V π * (b) ≥ V π (b) ∀b, π). Note that this value function gives an estimate of the value of being in a particular belief state, and is used to compute the best possible action, and not as a direct performance evaluation measure when the system is in use.\n\nThe SymbolicPerseus package uses dynamic programming to compute the optimal value function V n for n steps-to-go from the optimal value function V n-1 for n -1 steps-to-go:\n\nHowever, since b is continuous, the above computation will only be feasible if V n (b) has a closed form parameterization. Sondik and Smallood [22] showed that the optimal value function for finite horizons is piecewise linear and convex. This means that there exists a set Γ n of linear segments α such that Among the class of point-based value iteration algorithms, Perseus [20] is very simple and yet quite effective. The algorithm selects a set B of reachable beliefs by executing a default (or random) policy for a number of steps. Then, at each iteration it computes a set Γ n by selecting beliefs in a randomized order and performing a point-based backup for each belief that doesn't already have an α-vector in Γ n that improves on the best α ∈ Γ n-1 at b.\n\nwith Algebraic Decision Diagrams (ADDs) [21] instead of by enumerating the values for each state. The transition probabilities, rewards and α-vectors are represented with decision trees that aggregate identical values and allow branches to merge, potentially reducing memory and computation by an exponential factor. This idea was used successfully for MDPs [23] and for POMDPs [19]. SymbolicPerseus makes three additional approximations. First, we put a cap on the complexity of V n (e.g., size of Γ n ). This is done by retaining only the k α-vectors that improve the most the value function at some belief in B. Typically, this bound only causes minimal decrease in the quality of a solution. Second, we merge states with values that differ by less than the Bellman error [24]. This allows the resulting algebraic decision diagrams to be more compact. Note that the error introduced shrinks to zero as the computation converges, preserving optimality. Third, we only sum over observations with a non-negligible probability of occurrence in Steps 2 and 3 above. More precisely Pr(o|b, a) is negligible if Pr(o|b, a)(R max -R min )/(1-γ) < bellmanError, which again preserves optimality. This fast technique is related to a general method for dealing with large observation spaces [16].\n\nWe solved the POMDP with SymbolicPerseus by using 150 alpha vectors and 65 iterations in 42 hours on a dual Intel R 2.40GHz XEON TM CPU with 4Gb of RAM, using about 2Gb of memory maximum.\n\nThis section presents the three experiments we have done. The first (Section 4.1) evaluates the performance of the tracking system, the second (Section 4.2) evaluates the performance of the decision making component (the POMDP policy) and the third (Section 4.3) evaluates a full working system during an eight-week user trial conducted with six persons with moderateto-severe dementia. Results from these three experiments are presented in Sections 5.1, 5.2, and 5.3, respectively.\n\nThe performance of the hand-and-towel tracking system is evaluated on three handwashing sequences by manually checking each frame in the sequences for tracker failures, and comparing against a simple hand-position estimator using only color (no tracking). We show how the trackers are robust over long periods of time, and can recover from failures.\n\nSimulations were used to evaluate the POMDP policy with respect to the POMDP model in simulation and show that the policy is reasonable. This demonstrates that, if the POMDP is an accurate model of the real world, then we expect our policy to perform fairly well.\n\nSimulations use two models: the first is the true user model, and the second is the system's model. The true user model has a fixed user attitude: dementia level, responsiveness and awareness. The system's model then interacts with the true model, and attempts to estimate the state of the user and take actions accordingly. We evaluate the simulations by looking at the average discounted reward over time. We compare this reward to that obtained by the optimal policy for the fully observable version of the true user model, solved using a fast, structured, factored value iteration method [23]. This fully observable version has access to the actual state of the true user model, and so represents a utopian upper bound on the value that can be achieved. Note that this upper bound does not take any observational uncertainty into account and is therefore higher than the value that would be obtained by the optimal POMDP policy. Also, as discussed in Section 3.5, we look at whether the estimated dementia level converges to the dementia level of the true user model.\n\nWe compare five different policies. The first is the computed POMDP policy, while the other four are heuristic policies. The first heuristic has a fixed set of hand-crafted thresholds on the belief distribution, and attempts to prompt when the user is not aware, and does so at whatever level of responsiveness is most likely. If the user is unaware and unresponsive, then the human caregiver is called. The other heuristic policies that we compare against are the Null policy, which always does nothing, the CG policy, which always calls the caregiver, and the certainty-equivalent (CE) policy, which looks at the most likely state given the current belief, and then acts according to the policy derived for the fully observable model (MDP).\n\nWe compute two different estimates of the discounted rewards obtained in simulation averaged over all 36 possible attitudes (values of dementia level, awareness and responsiveness). The first, ρ 0 is the expected discounted reward given a uniform distribution over user attitude. The second, ρ δ is the expected discounted reward using the initial belief distribution over attitudes, which gives a more accurate (slightly lower) estimate since the actual user population will consist of more persons with lower dementia levels. Standard deviations of the averages are computed using the differences between the POMDP policy rewards and that of the fully observable (utopian) MDP upper bound.\n\nA modified withdrawal-type, single-subject research design was used to test the system. This research design consisted of a baseline phase (no computer guidance), A, and an intervention phase (with computer guidance), B, tested in the order A1 -B1 -A2 -B2. For each test phase, data were collected describing the ability of the participants to independently perform the required task (handwashing), and caregiver burden and workload. Data were also collected on the performance of the system itself, including its accuracy in determining the type of assistance required by the users, and the effects of the chosen system response.\n\nParticipants were recruited from a long-term care facility in Toronto, Canada, where the trials were conducted. The primary inclusion criteria were clinical diagnosis of moderate-to-severe dementia (from our experiences this group requires, and benefits from, cuing during ADL completion). Six older adults participated in the study-5 females, 1 male, average age 86.3 ± 8.8. Using the Mini-Mental State Examination [18], five of the subjects were classified as having moderate-level dementia, with the one remaining classified as severe.\n\nAs shown in Figure 8, a fully functional washroom located in the long-term care unit was retrofitted with the necessary system hardware, specifically a ceiling-mounted IEEE-1394 digital video camera (Point Grey Research Drag-onFly2), a 21 inch LCD screen and speakers (to play/display the required prompts), and a Dell Latitude laptop computer (2 GHz processor, 2 Gb RAM) as the processing unit for the system software and hardware. This computer also served as the primary graphical user interface (Figure 7), displaying information about the system variables (e.g., estimated plan steps, response provided), and the user's progress through the task, and allowing the human operator to input observations during caregiver calls (details in Section 4.3.1). The laptop was located in an office adjacent to the test washroom, where the researchers monitored the trials and system operation. The trials were also recorded using an independent video recorder from a view above and slightly behind the sink (see Figure 8). This video is not used by the system, but is used for the manual annotations. All system actions were logged, including the flock particles, actions, times stamps, and images.\n\nHandwashing sequences involved two assistants. The first assistant is the caregiver, whose role was to assist the user either when instructed to do so by the system (during intervention phases) or when she thought it was necessary (during baseline phases). The second assistant is the technician, whose role was to start/stop the system, and to monitor the system running through the interface (Figure 7). Each subject was required to sit in a wheelchair before being positioned by the caregiver in front of the sink within the test washroom and asked to complete the task of hand washing, at which point the device was started by the technician. During the intervention phases the caregiver was instructed to leave the subject alone inside the test washroom and to join the technician in the adjacent room. The caregiver provided a subject with assistance only after an audible signal from the device's GUI directed her to do so, at which point the system would pause. The caregiver would then assist the subject with that particular step only and return to adjacent room. The technician would then input the current planstep observation, restart the system, and the sequence proceeded. Finally, the caregiver was instructed to veto the system in case of any circumstance where the person's health or well-being was being jeopardized, or if they started to move away from the sink (e.g., attempting to leave the room). This occurred in only two cases, which were removed from the data discussed below. Each subject's sequence took approximately twenty minutes to complete, which included time to accompany him or her to and from his or her room. The caregiver and technician wrote logs of the sequences, documenting any special events for each day.\n\nThe user's dementia level was estimated using the Mini-Mental State Examination [18] before and after the POMDP trials. The Mini-Mental State Examination (MMSE) is a standardized written assessment instrument that measures and evaluates cognitive function and mental impairment, often given serially to determine the current abilities and disabilities of an older adult from the effects of time. The MMSE includes a series of thirty questions with stimuli that measure comprehension, reading, writing, memory, and drawing, each of which scores points if answered correctly. If every answer is correct, a maximum score of 30 points is possible. A user's score classified him or her into one of three categories: (1) mild 20-25;\n\n(2) moderate 10-19; (3) severe 0-9.\n\nThe videos and logs were manually annotated for the unobservable aspects of the POMDP state (planstep, behavior, awareness and responsiveness). Annotations of the data were made by a single human rater using the utility shown in Figure 8. The screen depicting the trial video would pause at the moments in the sequence when the POMDP updates were made. At each pause, the human rater would annotate the subject's behavior, hand locations (left and right), attitude and the planstep. The rater was briefed on the different hand locations and behaviors prior to starting. An additional behavior of N/A was available if the annotator could not decide what behavior was being executed.\n\nThe variables awareness and responsiveness were annotated using sliders with Fig. 8. Example during handwashing sequence annotation showing played video and annotator utility GUI. The picture is taken from an independent video camera (not used by the system), and shows the sink, soap, towel, a user, the video display behind plexiglass and two speakers mounted above the display. The system camera is out of sight, above the sink, looking down.\n\nthe range [0-1] in 0.01 unit increments. Higher values on the awareness scale reflected stronger belief that the subject would not need any assistance (prompt) from the device. Higher values on the responsiveness scale reflected a higher level of confidence by the rater that the subject had been responsive to any correct or incorrect assistance (prompt) they may have received. The slider associated with the variable awareness was updated at every pause. In contrast, the responsiveness variable was only updated after a complete sequence, at which point the human rater input whether she believed the subject was responsive or not to any assistance or prompts given by the COACH (0.5 was given if no prompts were issued). This responsiveness annotation was then used for all steps during the sequence. It is important to note that currently there is only one manual annotation, and so the annotations represent only one human's (possibly biased) estimates. We are currently working on more annotations, and will include these in future versions of the paper.\n\nWe evaluate the performance of the system by looking at examples, at the correlation between POMDP estimates of the behaviors and manual annotations of the behaviors, at the reward gathered, and at the correlation between MMSE scores and the POMDP's estimated dementia levels.\n\nThe correlation between the manual annotations and the POMDP belief estimate how well the computer vision system is able to predict the manual observations of behaviors. This gives us some information about the computer vision system's interface to the POMDP model. However, note that better correlation here does not necessarily indicate better performance for the POMDP, because the strength of the POMDP model is to estimate the entire distribution over states. Thus, we do not look at other correlations (e.g. between annotated plansteps and POMDP estimates).\n\nThe expected reward, based on the POMDP belief state, is\n\nwhere N is the number of sequences, γ is the discount factor, b ji (s) and a ji are the POMDP belief and action taken, respectively, at step i of sequence j, and R(s) is the reward function for state s. This estimate gives what the POMDP believes its reward to be, and may be an over or under-estimate of the actual reward. The actual reward can be computed based on the manual annotations as\n\nwhere s * ji is the manual annotation of step i in sequence j. This is our best estimate of the actual value of the POMDP's actions, since it is based on independent manual annotations of each sequence. The expectations can be compared to the POMDP simulation results described in the previous section (4.2). These simulation results give the expected reward for a POMDP acting in a world that is simulated using the POMDP model itself (so the POMDP has a perfect model of the world dynamics and observation distributions). On the other hand, V (s * ) gives the reward for a POMDP acting in the real world, and so the difference gives us an indication of how well our POMDP model approximates the real world.\n\nThe correlation between the MMSE scores and the POMDP's estimated dementia levels is a first attempt to validate the use of handwashing as a method to estimate a user's overall dementia level. The system was designed to have the belief in the dementia level variable propagated across trials for each user, to see if it would converge to a value that correlated with the MMSE scores, as described in Section 3.5. In this experiment, this belief propagation was done offline after the trials, by simulating the POMDP belief state using the actual logged data, including the actual system actions that were performed during the trials. This method is sound, and gives the true belief in the dementia level that would have been obtained using the actions that were performed by the system during the actual trial. We use this as a proof of this belief propagation concept, in preparation for using it in real-time during future user trials.\n\nWe used sequences taken from a user trial (completed in 2006) in which an automated prompting system (a predecessor of the one reported here) monitored and prompted persons with moderate to severe Alzheimer's disease [25]. The video was taken from an overhead SONY CCD DC393 color video camera at 30f ps, and a 570 × 290 pixel region around the sink was cropped. We used 200 particles and could perform updates of all three filters at over 13 frames per second. We evaluated the tracker by looking at whether the mean flock position was inside the hands or towel region in each frame for 1300 frames from a single user's sequence during which the user was drying their hands. We compare our method to a simple heuristic that looks only at the connected components from the thresholded images (using θ f ). We find our method makes no errors (0%) in locating the towel during the extreme occlusions compared to 7.4% for the heuristic method. The error rates for hand locations were 2.4% for our method vs. 5.3% for the heuristic method. The errors for our method in locating the hands were due to one hand's flock migrating close to the other hand when the hands were close.\n\nWe also tested our method on six sequences from two different users, and measured the number of tracker failures. We only looked at frames in which both hands were present and at least one was partially visible, and in which the caregiver was not present. A tracker failure was noted either if the hands were separated but one was not tracked, or if both hands were present and together (e.g., when being rubbed together) but neither hand was tracked, or if the towel was not tracked. We found error rates of only 1.9% over a total of 16986 frames in 3 sequences for one user and 0.8% over a total of 7285 frames in 3 sequences for the other. The majority of tracker failures happened after an abrupt change in hand motion, due to our constant velocity assumption. The tracker was consistently able to recover after all tracker failures within about 10 frames.\n\nFigure 9 show a close-up of an example where the data-driven proposal is used. The hands are being tracked in the sink region at frame 2144. The strength of the right hand filter is weak (6), since the hand has begun to move forward, and the particles do not adjust to the new velocity fast enough. The corresponding value of α is 0.3 at frame 2145, meaning that about a third of the particles at the next frame will be drawn from the data-driven proposal, q d , with the remaining coming from the prior dynamics. Indeed, we see the newly proposed particles at frame 2145, well distributed across the right hand. However, the weights of these particles, although sufficient to remain in the filter, do not significantly affect the mean of the filter immediately. By frame 2147, these new particles have gained all the filter's weight, however, and the hand is well tracked again through frame 2155, where the left hand filter is losing strength. At frame 2154, the left hand filter has dropped to 0 in strength, and gets completely re-initialised by the data-driven proposal at frame 2155.\n\nA simulation experiment involved a set of 20 simulations of handwashing, each for 100 steps (or until the true user had her hands washed). The dementia level belief was propagated across the 20 simulations, and we did 10 experiments with different random seeds. Table 2 shows the expected rewards over the 10\n\nDL/RE/AW PO-Heur-Null CG CE fo-MDP istic MDP lo/none/never 3.8±1.2 -1.1±0.9 -2.0±0.0 -75.2±3.2 6.8±0.6 9.1±0.4 lo/max/no 3.0±0.5 2.3±0.7 -0.9±0.1 -92.1±4.2 2.8±1.2 6.3±0.7 lo/med/yes 4.5±1.1 3.9±0.6 0.1±0.5 -117.8±4.0 -0.2±0.7 7.4±0.7 med/max/no 1.1±1.0 1.4±0.7 0.2±0.3 -93.6±3.9 3.4±0.8 6.0±0.8 med/min/yes 5.1±0.9 6.3±0.7 3.1±1.5 -118.4±4.3 0.9±0.9 8.1±0.6 hi/med/no 7.1±0.7 5.6±0.4 0.4±0.3 -95.6±3.9 7.2±0.7 9.3±0.6 hi/min/yes 8.3±0.7 9.8±0.6 9.7±0.9 -118.5±4.3 3.7±1.0 9.1±0.7 ρ 0 4.9±1.1 3.8±2.8 0.9±3.3 -97±16 4.2±2.5 8.3±1.1 ρ δ 4.8±0.6 4.6±1.0 0.5±2.1 -105±13 2.9±2.4 7.9±0.8 Table 2 Mean discounted rewards gathered over 20 simulation trials, with expectations computed over 10 experiments, for the POMDP policy, the heuristic policy (Heur.), the policy that does nothing (Null), the policy that always calls the caregiver (CG), and certainty equivalence approach (CE), and the expected value for the fully observable (MDP) version. Results are shown for a sample of different simulated user attitudes (values of DL, RE, and AW). The bottom two lines give the two expectations: unweighted (ρ 0 ) and weighted by the initial belief (ρ δ ), as described in Section 4.2.\n\nexperiments for representative user types, comparing the POMDP policy, the four heuristic policies, and the MDP upper bound. Table 2 also shows the average over all user types, showing that overall, the POMDP policy performs best, but not significantly better than the heuristic or certainty equivalent (CE) policy, while the call-caregiver policy (CG) is an expensive lower bound. For particular user types, we see that the CE approach does better if the user starts the trial less aware. This is because the CE approach uses a more aggressive prompting strategy due to the collapse of the belief to a single state. For example, if the belief state is close to uniform, the optimal (POMDP) policy may be to wait and see what the user does, to try to gain some information, whereas the CE approach will commit to some state, possibly causing a prompt to be issued. The CE strategy works poorly when the user is more aware. The Null policy works best when the user is least demented and most aware (since doing nothing is close to optimal in this case).\n\nFigure 10 shows the progression of the belief that the dementia level is equal to the true dementia level over the 20 simulations, averaged over 10 experiments. The maximum, mean and minimum values at each time step are shown. We see that for the extreme dementia/responsiveness/awareness levels, the POMDP learns the correct dementia level quickly. However, for intermediate dementia levels, the POMDP learns more slowly. This is reasonable since for these\n\n0 5 10 15 20 0 0.2 0.4 0.6 0.8 1 sequence P(DL = lo) 0 5 10 15 20 0 0.2 0.4 0.6 0.8 1 sequence P(DL = lo) DL=lo, RE=none, AW=never DL=lo, RE=max, AW=no 0 5 10 15 20 0 0.2 0.4 0.6 0.8 1 sequence P(DL = med) 0 5 10 15 20 0 0.2 0.4 0.6 0.8 1 sequence P(DL = hi) DL=med, RE=min, AW=no DL=hi, RE=min, AW=yes 0 5 10 15 20 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 P(DL) = true DL simulation number mean mean + σ mean -σ random guess average over all user attitudes intermediate cases, behaviors that could be in either extreme may be observed.\n\nFigure 11 shows key frames and belief states from an example sequence of subject 4 (Avg. MMSE of 11.5) during trial 34 (the first day of the first system trial). In this case, the user independently uses the soap (Figure 11-a), then turns the water on and rinses her hands (11-b). The system correctly infers she is in planstep g by 11-c. It gives her time to rinse, then her awareness shifts to no, and it prompts her to turn the water off, using a video prompt in Figure 11-c . She responds, but then gets momentarily stuck with her hands at the taps during the act of turning them off (11-d). The system gives her a further prompt to turn the taps off (11-e), cuing her to continue to the towel. She follows this prompt, using the towel to finish the task (11-f).\n\nFigures 12 and 13 show key frames and belief states from an example sequence of subject 8 (Avg. MMSE of 10.5) during trial 59 (during the second system trial). The user immediately turns on the water (Figure 12-a) and rinses her hands, but the system has low certainty that the tap was used. The user then proceeds to dry her hands 12-b), and the system has an even distribution over plansteps a or b showing that it is uncertain about whether the water is on or off. It is, however quite certain that the user awareness is not yes, so prompts for soap use with minimal specificity after 31 seconds (the least costly option given the current responsiveness belief). The user does not respond to this prompt, and the responsiveness shifts towards video or max. After a timeout, the system tries the most specific (video) prompt to use soap (Figure 12-c). Given the user's current dementia level, this is potentially a more effective prompt than a maximal prompt. Again, the user does not respond, and the system's belief is that the user has awareness never and responsiveness none, and so calls for human assistance after about 70 seconds (Figure 12-d). The caregiver intervenes and points explicitly to the soap which gets the user to use soap (Figure 12-e), and the belief is \"collapsed\" to planstep e (by the technician behind the scenes) after 92 seconds (Figure 13-a). Notice how, in Figure 12-d, one tracker starts to track the caregiver's right hand when one of the user's hands is completely occluded. This is not a problem for the system, which is temporarily paused during caregiver interventions. The tracker automatically resets about a second after the occluding hand dissapears.\n\nThe user then completes the trial during which she is given two prompts to turn the water on (Figure 13-b), then off again (Figure 13-d). These prompts happened because the user took a bit too long after using soap, and during  rinsing, causing the system to opt for a prompt. However, in this case, the prompts started simultaneously with the user beginning the behavior that was prompted. It is unclear whether she was actually responding to prompts, or whether the prompts were played just slightly too late to make a difference.\n\nThe system interprets this as the user responding to prompts, but it may be giving itself too much credit. The final frame at (Figure 13-e) shows the system has correctly estimated that the user has finished the task.\n\n5.3.2 User Trial Results: Annotations Most likely behavior (POMDP) away sink wet taps soap dry N/A 33 53 11 31 23 107 away 142 103 7 7 3 56 sink 62 277 89 79 30 43 wet 10 35 276 44 3 0 Annotation taps 2 18 46 226 23 14 soap 0 33 2 3 93 3 dry 19 48 0 18 27 523 Table 3 Confusion matrix showing the most likely behavior given the POMDP belief (columns) correlated with the annotations (rows), averaged over all user trials. The data in row n is taken from all timesteps in which the behavior annotation was n. The darkly shaded entries are the maximum for each row.\n\nTable 3 shows a confusion matrix for a comparison of the annotated behaviors with the POMDP's best estimate. The entry at row i, column j is the number of times the most likely behavior given the POMDP's belief was j when the handwashing scenario was annotated as behavior i. The largest number in each row is highlighted. We see that the behavior estimates are fairly good, with some confusion between away and sink, and the most confusing annotated behavior being sink. This is because the sink behavior can most easily be interpreted as either wet, taps or away: the differences in hand positions are small. The annotation of N/A was fairly evenly distributed across beliefs for the POMDP, most often being interpreted as dry.\n\nTable 4 shows the average reward gathered during the user trials, for each of the six users. The two columns show the rewards based on the POMDP's belief state, V (b), and on the manual annotations, V (s * ), as defined in Equations 10 and 11, respectively. The averages can be compared to the POMDP simulation results shown in the leftmost column of Table 2, that yielded a weighted average score of 4.8. We can see that the POMDP policy achieves nearly 80% of the value it does in simulation, implying that our POMDP model is a fairly good model of this domain, as far as its ability to be used to achieve value goes.\n\nexpected actual reward reward subject V (b) V (s * ) 1 1.84 0.51 3 7.66 11.77 4 3.93 3.22 5 1.00 1.12 6 5.22 3.41 8 2.73 2.42 avg. 3.82 3.74 Table 4 Discounted rewards gathered during actual user trials. The first column shows the expected reward over all sequences based on the POMDP's belief state (the POMDP's expected reward, see Equation 10). The second column shows the actual reward gathered, based on the manual annotations, averaged over all sequences (Equation 11). final estimated expected subject MMSE MMSE MMSE dementia level number Before After Average low med 1 5 3 4 0.9992 0.0008 3 12 18 15 0.986 0.0136 4 10 13 11.5 0.9998 0.00002 5 19 20 19.5 0.016 0.984 6 12 14 13 0.9997 0.00024 8 11 10 10.5 0.9997 0.00024 Table 5 Mini-mental state examination (MMSE) scores before and after the trials, the average value of the MMSEs, and the final estimated expected dementia level (DL), as computed by the POMDP, using corrected dementia level belief propagation across trials. The belief is shown as a distribution over DL=low,med only.\n\nTable 5 shows the final estimated dementia level (DL), compared to the Mini-Mental State Examination (MMSE) scores for each subject before and after the trials. Figure 14 shows the estimated level of dementia over the course of the trials, with the average MMSE scores shown as well. First, we see from Figure 14 that the DL variable converges over the course of the 21 handwashing sequences in the user trial. Most subject's DL converged to DL=low, and only one (subject 5, MMSE=19.5) converged to DL=med. This is encouraging, as it indicates that the DL's measure of functional performance in handwashing may correlate with the MMSE scores, although we cannot make any further conclusions based on this limited data. That is, this data is not inconsistent with the hypothesis that the DL correlates with the MMSE. It appears, however, that since most subject's DL converged to DL=low, the model needs to be modified to include a \"lower\" level of DL. Perhaps this additional range will result in a greater spread of final converged DL values across this population of users, allowing for more precise correlation analyses.\n\n6 Discussion and Related Work\n\nThe handwashing system described in this paper makes contributions both in computer vision modeling of human activities, and in decision making under uncertainty. However, the system is most significant for its combination of both of these contributions into an integrated, real-time, working system that has been tested on its intended user population. There are several other intelligent systems currently being developed for the older adult population. These include the Aware Home Project [26], the Assisted Cognition Project [27], Nursebot Project [28], the adaptive house [29], and House n [30], These projects are similar to the work described in this paper in that they incorporate AI and a decision-theoretic approach. In particular, the Autominder System [31], one aspect of the Nursebot Project, applies a POMDP in the development of the planning and scheduling aspect of the system [28]. However, these systems are mainly used as scheduling and memory aids, and do not incorporate user attitude modelling or planning for prompting. Furthermore, they have not at-tempted a full integration of the sensing and planning components in a unified framework such as we describe here.\n\nComputer vision research into human behavior tracking and understanding is a very active field. A notable example is a system developed to monitor hand washing quality [36], where the processes of lathering and rinsing are modeled as a detailed sequence of steps. Systems have been developed for inferring human activities [32,33,34,35], but few have used this information to interact with users. Instead, most focus on tracking and recognising human behaviors as a task in and of itself, without explicitly considering any larger goals. Exceptions are the Nursebot [28], and the adaptive house [29], but these systems have used limited computer vision.\n\nOur tracking system is situated in a large computer vision literature on the pervasive problem of tracking an object in the presence of occlusions and distractions. Objects to be tracked usually have some consistent features, are spatially compact, and move cohesively. Typical tracking methods use some model of the appearance of an object to be tracked, and fit the model to the object over time. However, in many applications, the object's shape and appearance may change over the course of a sequence. For example, human hands change shape and velocity fairly quickly, differences which must be accounted for. Our method uses a generic type of model: a flock of features [6]. Flocking concepts have been applied in computer graphics [37,38], and in deterministically tracking an object with a moving camera using KLT features [6]. Our previous work described an approximate Bayesian sequential tracking method that used flocks of features to implement spatial, feature and velocity cohesiveness constraints [3]. We used a Monte Carlo approximation with a data-driven proposal distribution [8]. The idea of a multi-modal proposal was used successfully in [13], where an Adaboost process generated particles for the proposal distribution of a mixture of particle filters. The particles were adopted only if their distribution overlapped with one of the particle filter's mixture components. We found our tracking method to work fairly well, and is well suited for integration into the generic planning modules, as it makes few assumptions about the shapes of objects to be tracked, and so requires less human design and engineering a-priori.\n\nPartially observable Markov decision processes (POMDPs) [39] provide a rich framework for planning under uncertainty. In particular, POMDPs can be used to robustly optimize the course of action of complex systems despite incomplete state information due to poor or noisy sensors. For instance, in mobile robotics [40], spoken-dialog systems [41] and vision-based systems [42], POMDPs can be used to optimize controllers that rely on the partial and noisy information provided by various sensors such as sonars, laser-range finders, video cameras and microphones. The handwashing system described here has led to a number of contributions to the POMDP literature. We have shown how to solve POMDPs with continuous or large observation spaces [16], and how to approach the handwashing problem with Bayesian reinforcement learning [43]. This paper specifically introduces a number of methods for speeding up or improving the accuracy of the point-based solution methods introduced in [44,20,19].\n\nThis paper described a system for assisting a person with dementia complete the task of handwashing that combines a flexible object tracker with monitoring and decision making using a partially observable Markov decision process (POMDP). The system was demonstrated during an eight-week user trial in Toronto, Canada, in summer 2007. The results showed that the system can provide assistance to this user group. However, a number of important challenges remain.\n\nThe first challenge is endowing assistive systems such as this one with the ability to adapt to users, both in the short and long term. Adaptivity implies the ability to adjust or modify the interaction strategy with a user over time, based on the changing abilities, needs or preferences of the user. Alzheimer's disease, as with many forms of dementia, is progressive: the capabilities and needs of sufferers change over time, requiring assistive technologies to adapt in order to provide sustained support. Our current system only has a limited adaptivity in that it can only learn a user's attitude based upon a fixed dynamics model. We have begun investigating Bayesian reinforcement learning methods in the context of handwashing assistants to make this system adaptive to users and able to learn their specific patterns of behaviors [43]. This learning method comes with a high complexity cost, however, and work is currently ongoing into reducing this. We believe that this complexity challenge is related to a second challenge: ensuring the computer vision models can generalise to other tasks. Adaptivity depends on input generality, since constraints posed by input specificity will reduce the potential for exploration by the system. At the same time, adaptivity is a key to reducing complexity, since new representations can be acquired \"on the fly\" and so the system does not need to take all possibilities into account a priori. We are currently beginning to address both of these key challenges, and will leverage their inter-dependence to develop novel algorithms for adaptivity and for computer vision.\n\nA second major challenge is the specification or learning of the reward function. We currently specify this reward function by hand. However, the reward function encapsulates a great deal of prior information from carers and users, that should be carefully elicited from the target population. The benefit of framing the problem using a decision theoretic model is that it provides a the-oretically well founded model within which we can start to investigate questions of preference and value tradeoffs that are inherent in cognitive assistive technologies.\n\nA number of other avenues are open for future work.\n\n• In this paper, we described very preliminary results showing that a handwashing assistant could be used to monitor general user health (e.g., dementia level). We hope that this monitoring capability can be extended and improved, rendering these technologies doubly useful to carers and users. • A benefit of the system we have developed is its ability to generalise to other ADL. We are currently looking at implementing the same system for other important washroom ADL, such as toothbrushing, and eventually, toileting. • We are investigating methods for learning the model from data, and for integrating the tracker uncertainty into the decision making. • Using stereo depth information for tracking • The prompts are currently \"canned\" and do not change over time. We are investigating methods for making the prompts adaptive to specific users. • The system currently has no \"ears\", and so cannot respond when users say something (which they often do). We plan to add some speech recognition capabilities to the system to overcome this. • Finally, we are looking into other non-invasive sensors to provide more inputs to the POMDP models. One example is the use of sound (microphones) to detect if the water is running or not.\n\ncode available at http://www.cs.uwaterloo.ca/∼ppoupart/software\n\nprobability that would be obtained using random guessing."
}
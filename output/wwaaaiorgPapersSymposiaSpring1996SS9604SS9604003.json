{
    "title": "Completable Planning: A Curative Learning Approach to the Imperfect Theory Problem",
    "publication_date": "1990",
    "authors": [
        {
            "full_name": "Melinda T Gervasio",
            "firstname": "Melinda T",
            "lastname": "Gervasio",
            "affiliations": [
                {
                    "organization": "University ofIllinois at Urbana-Champaign Beckman Institute for Advanced Science and Technology",
                    "address": {
                        "city": "Urbana",
                        "postcode": "61801"
                    }
                }
            ]
        },
        {
            "full_name": "Gerald F Dejong",
            "firstname": "Gerald F",
            "lastname": "Dejong",
            "affiliations": [
                {
                    "organization": "University ofIllinois at Urbana-Champaign Beckman Institute for Advanced Science and Technology",
                    "address": {
                        "city": "Urbana",
                        "postcode": "61801"
                    }
                }
            ]
        }
    ],
    "abstract": "The complexity of the real world makes a perfect characterization impossible. Purely deliberative approaches such as classical planning are thus susceptible to unexpected failures. Preventive learning approaches address th e imperfect theory problem through the diagnosis of such failures and the determination of fixes to avoid similar failures in the future. Curative learning approaches such as completable planning instead treat fail ures as alternative outcomes and learn alternative plans to the recover from the failures. Through learning, a completable planner learns to plan only for the more likely outcomes in the particular problem distribution it faces. It thus significantly reduces the COS! of disjuncti ve planning .. As a curative learning approach, it IS also better suited to domains where outrlghl fa ilures are unacceptable or failure diagnosis is expensive. making preventive Jearning infeasible. Completable planning is a general incremental learning approach whose Sllccess in real world domains may be increased through the integration ot ot her learning techniques and the. considerat ion of different planning perspectives.",
    "full_text": "Real worid planners must live with imperfect information. Consider a robot navigation system given the simple task of moving to a specific location down the hallway. A traditional classical planning representation of this problem involves info rmation regarding the robot's initial location and its goal location It also includes some characterization of a MOVE operator, with parameters such as speed, distance, start time, and stop time. This representation is imperfect in many ways. ff the robot is unstable in its initial pos ition, then it may inadvertently change iocations between the start of planning and the start of execut io n. For example, if one of its wheels is teetering on the edge of a rai sed platform, it may fall off even before aitempting the move. If the robot calculated a specific distance to move based on its given initial location, then the success of the move action will be affected as well. Furt.hermore, movement by dead reckoning will only succeed if the calculated movement parameters account for all possible factorsthe speed of the motors, wheel slippage during starting and stopping, wheel altgnment , air reSistance, and so on, not to mention potential interference from other active agents in the vicinity.\n\nThe/rame problem [McCarthy69] guarantees that it is impossible to completely consider all the factors possibly affecting the effects an action. For STRIPS-type operators, thi s incompleteness may be manifested in the form of an incomplete set of preconditions. This results in two types of execution failure. First, the action may fail to achieve its intended effects because a neceSSJry but unspecified precondition did not hold immediately prior to executing the action . Second, the action may result in additional unintended effects that clobber previously achieved preconditions for subsequent actions. With a domain theory consisting of actions with incomplete preconditions, a planner may construct plans which the domain theory supports as being correct but which fail to achieve their goals,\n\nWhile a perfect symbolic representation of a domain is unattainable, learn ing may enable real world planners with imperfect domain theories to construct plans with high probabilities of success. Previous learning approaches to the problem of imperfect domain theories have been preventive (e.g. [Ben-nett90, Chien94, DeJong93, Gi193, Mostow87]) . These approaches rely failure diagnosis to explain the cause of any failures encountered dunng execution. Similar future failures can then be prevented by fixing the cause ot failure-e.g . retracting a faulty assumption, adding a missing precondition, or changing acceptable parameter ranges.\n\nLearning is appropriate for planning domains where problems fall into problem classes, and the plans for the problems of a problem class have much in common. Genera! plan segments or pi ann 109 techniques may then be extracted from specific plans and used for other problems in the Droblem class.\n\nA plan schema is a general plan which may be instantiated into specific plans for a problem class. A plan schema may be associated with a success rate This is the probability that when the schema is applied to a problem, the specific instantiation will achieve the problem goals.\n\nA preventive plan schema learner may be characterized as increasing the success rate of a plan schema by preventing its application pians to problems where Jl will nmsucceed. In (he Limit, the belJeved applicability or a plan schema closes in on the problems for which instantiating the schema results in a plan which will achieve the problem goals. An alternative approach is to increase the success rate of a plan schema by augmenting it with additional or other actions to execute in the case when actions have unexpected effects. In this approach, unexpected effects are not treated as failures but rather as situations for which alternative plans are to be constructed. In the limit , the plan schema will succeed for the range of problems within its applicability set. Because this approach provides treatment to recover from failures, we call it the curative approach.\n\nCompletable planning is a curati ve learning approach to the problem ofimpeIi'ectdomain theories. Completable planning begins with the construction of a base plan, which is a completely ordered sequence of operators. The base plan may be constructed using any standard classical planner, including partial-order planners (e.g. [Chapman87, McAllester9 I, Pen-berthy92]). However, a permanent complete ordering must then be imposed. This is because different orderings may result in different sets offailures. Allowing arbitrary orderings would compromise the usefulness of any plans constructed in response to failures.\n\nEvery stepln the base plan is associated with a partlcuhir set of expectations. These are the conditions that, accordIng to the domain theory of the planner, will be true and must be true for the achievement of the problem goals. Minimally, the expectations associated with a plan step are its preconditions, since these are the conditions believed to be necessary for the action to achieve its effects. Maximally, the expectations associated with a plan step IS the regression of the goal over the tail of the plan beginning with the action. If these conditions hold immediately prior to executing the action, then accord-Jrlg [0 the domain theory. the preconditions of every remaining action will be satisfied. Thus. the goal ultimately will be achieved.\n\nDuring execution, an attempt is made to verify the expectations associated with each step immediately prior to the step's execution. If the expectations are met, execution continues. If the expectations are not met, contingent planning is invoked. The planning component is called to construct an alternative plan for achieving the goal from the current state. The contingent plan may branch back into the base plan atany point to reuse some of the actions in the plan. If a contingent plan is successfully constructed, the new segment is generalized and added into the base plan as a new alternative branch. Execution proceeds until either the goal is reached or contingent planning fails. [Gervasi094] elaborates on the information-gathering issues of completable planning.\n\nCompletable planning employs a probably approximately correct (PAC) learning algorithm. A solution is defined with respect to () (minimum goal success rate), X (maximum execution length) and Y (maximum per episode planning cost). A completable plan (i.e. a base plan with augmentations) is a solution jf every augmentatIOn IS constructed with cost::;; Y, every successful unfolding achieves the goal in ::;; X actions, and the probability of plan success is;:::: () . Gi ven a base plan and PAC parameters f (error) , <5 (confidence), and y (solvabi lity), if the the probabil ity of generating a so lution is;:::: y , then with probability;:::: I -0 the algorithm outputs a plan with success;:::: ()f . The number of examples required to 1 I 1 generate a solution is polynomial in 7' -, and -. The U f Y completable planning approach is thus an attractive, tractable learning approach to the problem of imperfect domain theories.\n\nDisjunctive planning [Draper94, Peot<J2, Warren76] deals with the problem of incompletely specified preconditions by allowing actions to be characterized as having multiple possible outcomes. Goal achievement is then guaranteed by determining acontingency plan foreachpossibleuutcomeofevery action in a plan. However, with this branching potentially occurring for every action in a plan as well as every action in every contingency plan and so on, disjunctive planning qui ckly becomes unwieldy. With fewer preconditions to achieve, planning in the backward direction is decreased. However. wuh multiple possible outcomes, planning in the forward direction is increased. Planning approaches to making disjunctive planning more feasible have included associating probabilities with the different outcomes and planning only for the most probable ones, as in [Drummond90], and using control rules to avoiding useless search. as in [Genesereth93]. These approaches buy feasibility at the cost of an increased domain engineering burden.\n\nCompletable planning i ncreases the feasibility of the disjunctive planning approach in three ways. First, the requirement of specifying all the possible outcomes of every ac tion is eliminated. The burden on the knowledge engineer is thus reduced. Second, contingent planning cost is reduced because the completable planner plans only in response to failures. Thus, planning resources are expended only on those outcomes likely to occur in the particular problem distribution the system is facing. Third, total planning cost is reduced because of learning. This allows the cost associated with con-structIng a particular schema or plan segment to be amortized over many applications. The increase in feasibility comes at the cost of learning.\n\nCrucial to the preventive learning approach IS a good failure diagnosis component. Without one, the determined cause offailure may be incorrect. Consequently, the attempted fixes may be insufficient for preventing future similar failures. Unfortunately, failure diagnosis is a difficult problem, not unlike the planning problem. The preventive learning approach is thus faced with a similar qualityllractability tradeoff.\n\nIn contrast, the curati ve learning approach does not require additional knowledge for failure diagnosis and subsequent domain theory repair. In problem scenarios where pinpointing the cause of failure is difficult, completable planning may be the better choice. For example, consider a mobile system given the task of exploring a partially-charted planet. Because the information about the domain is incomplete, the system cannot anticipate all the situations which might occur. Thus, its initial plan may not work. Upon encountering a hostile life form, a completable planning system could decide to employ defensive or evasive maneuvers to handle the situation. It can do this without having to understand why it crossed paths with the other agent. It only has to realize the anticipated encounter and figure out how to deal with it. The preventive alternative is not only more expensive, but potentially dangerous as well, as it may leave the system vulnerable while it attempts to explain the unexpected situation.\n\nA curative learning approach suc h as compJetabJe planning ca n immediately use the results of its learning. Individual failures thus do not automatically result in a failure to achieve the problem goals . Thi s makes completable planning partic ularly attractive for problem domains where achieving the goal is paramount. In a factory, for example, machines may break down, schedules may be delayed, and particular raw materials may be used up. A preventive sol ution would involve stopping production whenever such unexpected events occurred, determining the cause of failure, installing preventive measures. and starting over. On the other hand , a compietable planner could learn ways to handle the failures and continue production. Some cost would be Incurred by the delay, but production need not come to a standsti ll and incur even greater costs.\n\nThe savings achieved by eliminating failure diagnosis do come at {he cost of absorbing unrecoverable failures. While a preventive approach may result in a handful of robots falling off a cliff, a curative approach is susceptible to sending whole armies into the ravine, as it never learns why the robots are getting too close to the edge. Because it does not alter the flawed domain theory, the completable planning approach is much more sensitive to the quality of the given domain theory. However, unless the gi ven domain theory is pathologically incorrect, the completable planning approach will result in greater plan success.\n\nCompletable planning was developed for weI/-behaved environments for which often-correct thoug h impeifect domain theories can be constructed. For example, an office environment is well-behaved. Each room is expected to contain objects such as desks, chairs, and computers. Howeve r, these may range in size and type as well as position and location . Floors may be known to either be carpeted or tiled . But the particular carpet fiber or tile materia! m ay be unknown. The domain is well-behaved because ig norance of the precise flooring material , for example , does not drastically affect the effects of moving across the floor. An office courier attempting to move four feet may result in moving four feet and twO inches on freshly-waxed tile or three teet and six inches on plush carpet. But it is unlikely to result in the courier turning two corners, entering another room, and crashing through the window.\n\nThe more well-behaved a domain, the better the performance of completable planning. Experiments with a variety of l5 simulated domains, including robot navigation, a toolbox world [Krebsbach92], and parts assembly confirm that average execution length becomes longer as the probability of expected outcomes decreases. A greater range of possible outcomes also increases the planning cost, associated with a plan schema. The learning cost is consequently increased as well. The upper bound on the success rate of a completable pl anner is also affected by the probability of unrecoverable failures.\n\nThere are two ways in which completable planning may be more successfully adapted to les~ well-behaved domains. First, some aspects of preventive learning may be adopted for the purpose of improving the initial domain theory. In the exploration and manufacturing examples presented earlier, c urative learning techniques could be used to immediately handle unexpected situations. Meanwhile, a deeper analysis could be performed offline for the purpose of determming more long-term solutions. These could then be installed la ter at a more convenient time. The complementary s trengths of preventive and curative learning approaches make a hybrid approach attractive.\n\nA second way to make completable planning moreapplicable to less well-behaved domains is to alter the planning component. Completable planning was designed around a classical, deliberative planner. By using planners more suited to dynamiC, unpredictable environments, the completab!e pl anning approach may be made more applicable to less well-behaved domains. Forexample, the system couid employ an approach interleaving planning and execution. Instead of learning monolithic plan schemas, a compietable planner couid learn smaller general plan segments. This would be particularIy useful In domains where different plans often contam Similar segments but are rarely exactly alike. For example, the daily plan for a pickup and deli very service will a lways involve transporting packages between destinations, but the destinations as well as the packages will change. Through completable planning, an interleaving system could learn general segments such as transporting a paCkage from the east side to the west side. These segments could then be com bined as appropriate to the other pickup and delivery tasks of the day. Developing the completable planning approach through the investigation of different learning tec hniques and planning paradigms raises many interesting issues for future research."
}
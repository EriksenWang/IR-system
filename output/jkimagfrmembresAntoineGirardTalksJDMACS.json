{
    "title": "Verification of Hybrid Systems",
    "publication_date": "N/A",
    "authors": [
        {
            "full_name": "Antoine Girard",
            "firstname": "Antoine",
            "lastname": "Girard",
            "affiliations": [
                {
                    "organization": "Laboratoire Jean Kuntzmann -with work from Thao Dang, Université Grenoble 1, Goran Frehse and Colas Le Guernic - Ecole des JDMACS",
                    "address": {
                        "postcode": "2009"
                    }
                }
            ]
        },
        {
            "full_name": "Luc Jaulin",
            "firstname": "Luc",
            "lastname": "Jaulin",
            "affiliations": [
                {
                    "organization": "Laboratoire Jean Kuntzmann -with work from Thao Dang, Université Grenoble 1, Goran Frehse and Colas Le Guernic - Ecole des JDMACS",
                    "address": {
                        "postcode": "2009"
                    }
                }
            ]
        }
    ],
    "abstract": "N/A",
    "full_text": "• Überlingen, July 1, 2002 • 21:33:03 -Alarm from Traffic Collision Avoidance System (TCAS) • 21:34:49 -Human air traffic controller command B757-200 TU154M ! • Überlingen, July 1, 2002 • 21:33:03 -Alarm from Traffic Collision Avoidance System (TCAS) • 21:34:49 -Human air traffic controller command • 21:34:56 -TCAS recommendation B757-200 TU154M ! • Überlingen, July 1, 2002 • 21:33:03 -Alarm from Traffic Collision Avoidance System (TCAS) • 21:34:49 -Human air traffic controller command • 21:34:56 -TCAS recommendation • 21:35:32 -Collision B757-200 TU154M ! Boeing & Tupolew Collision • Überlingen, July 1, 2002 • 21:33:03 -Alarm from Traffic Collision Avoidance System (TCAS) • 21:34:49 -Human air traffic controller command • 21:34:56 -TCAS recommendation • 21:35:32 -Collision B757-200 TU154M ! Official Inquiry Recommendation:\n\n\"pilots are to obey and follow TCAS advisories, regardless of whether contrary instruction is given\"\n\nJoin Maneuver [Tomlin et al.]   • Traffic Coordination Problem join paths at different speed\n\n• Goals avoid collision join with sufficient separation\n\n• Traffic Coordination Problem join paths at different speed\n\n• Goals avoid collision join with sufficient separation\n\n• Models -Environment: Planes -Software: Controller • switches fast/slow\n\n• Specification keep min. distance disturbances Formal Verification • Characteristics mathematical rigor (sound proofs & algorithms) exhaustive • In this talk: Reachability Analysis initial states run (trajectory) forbidden states reachable states = states on any run\n\nJoin Maneuver [Tomlin et al.]   time reachable states yellow plane reachable states blue plane\n\nJoin Maneuver [Tomlin et al.]   time\n\nreachable states yellow plane reachable states blue plane Formal Verification • Key Problems computable (decidable) only for simple dynamics computationally expensive representation of / computation with continuous sets Formal Verification • Fighting complexity with overapproximations simplify dynamics set representations set computations • Overapproximations should be conservative easy to derive and compute with accurate (not too many false positives) Outline I. Hybrid Automata and Reachability II. Reachability for Simple Dynamics a) Linear Hybrid Automata b) Piecewise Affine Hybrid Systems III. Application to Complex Dynamics via Hybridization Incorrect / Unknown Revise Design Formal Verification Model of System Formal Specification Correct Verification (algorithmic) • Bouncing Ball:\n\n-Flow:\n\nExecution of Bouncing Ball\n\nx 1 (t)\n\nx 2 (t)\n\nRevise Design\n\nFormal Specification Correct Verification (Reachability)\n\n• Compute successor states 0 R 0\n\n• Why should we care?\n\n-Reachability Analysis is a set-based computation that can answer many interesting questions about a system (safety, bounded liveness,…)\n\n• What's the problem?\n\n-The hardest part is computing time elapse.\n\n-Explicit solutions only for very simple dynamics.\n\n• What's the solution?\n\n-First study simple dynamics.\n\n-Then apply these techniques to complex dynamics.\n\nI. Hybrid Automata and Reachability II. Reachability for Simple Dynamics a) Linear Hybrid Automata b) Piecewise Affine Hybrid Systems\n\n• A very simple class of hybrid systems\n\n-Note: Reachability (and pretty much everything else) is nonetheless undecidable.\n\n• A case study\n\n• Continuous Dynamics = convex polyhedron over derivatives\n\n• Compute discrete successor states Post d (S) all x' for which exists x 2 S s.t.\n\n• Operations:\n\nexistential quantification intersection standard operations on convex polyhedra\n\n• Compute time elapse states Post c (S)\n\n• Theorem [Alur et al.]   -Time elapse along arbitrary trajectory iff time elapse along straight line (convex invariant).\n\ntime elapse along straight line can be computed as projection along cone [Halbwachs et al.]   Inv Reachability with LHA\n\n[Halbwachs, Henzinger, 93-97] invariant initial states 9 derivatives successors projection cone 1. get projection cone 2. time elapse by projection 3. compute successors of transitions 46 Multi-Product Batch Plant • Cascade mixing process -3 educts via 3 reactors  2 products • Verification Goals -Invariants • overflow • product tanks never empty -Filling sequence • Design of verified controller LIS 11 M LIS 22 QIS 22 LIS 32 LIS 31 M LIS 23 QI S 23 M LIS 21 QIS 21 LIS 13 LIS 12 Switched Buffer Network • Buffers s 1 ,…,s n store material  continuous level x 1 ,…,x n • Channels transport material from buffer to buffer  continuous throughput v(s,s'), nondeterministic inside interval • Switching activate/deactivate channels discretely x v in v out x=x M x=0 Buffer Channel Automaton Model throughput = algebraic variable (will be projected away) this case study: omit saturation • Another class of (not quite so) simple dynamics but things are getting serious (no explicit solution for sets) • Exact Computation time elapse only at discrete points in time used to overapproximate continuous time • Efficient data structures\n\n• Analytic solution:\n\n• Explicit solution in discretized time (recursive):\n\nmultiplication with const. matrix e A± = linear transform\n\n-In other examples this error might not be as obvious…\n\n• Goal:\n\n-Compute sequence  k over bounded time [0,N±] such that:\n\n• Approach:\n\n-Refine  k by recurrence:\n\n-Condition for  0 :\n\nReachability by Time-Discretization\n\ninfluence of inputs autonomous dynamics influence of inputs\n\n• Find representation for continuous sets with\n\nintersection (with guards)\n\n• Linear Transformation\n\n• Linear Transformation • Separate transformations and Minkowski sums:\n\n• same or more behavior as before if\n\n• By definition x 2 Inv(l):\n\noverapproximation\n\nFrom Affine to LHA-Dynamics\n\n• Bouncing Ball Dynamics dynamics of x are affine (depend on v).\n\n• Invariant: x ¸0\n\nno restriction on v entire invariant reachable\n\n• Bouncing Ball Dynamics\n\n• Arbitrary accuracy for small enough K\n\nHybridization with LHA\n\n• Bouncing Ball -Reachable states for K=64: 99 Tunnel Diode Oscillator • What are good parameters? startup conditions parameter variations disturbances Tunnel Diode 6\n\n1 ) (   100 Tunnel Diode Oscillator R=0.20  Oscillation V C [V] I L [mA] Time [µs] initial states 101 Tunnel Diode Oscillator R=0.24  Stable equilibrium V C [V] I L [mA] Time [µs] initial states 102 V C [V] I L [mA]     in L C L L L C d C C V RI V I I V I V +    +   1 1 ) (   Tunnel Diode Oscillator Tunn el Diode • Oscillation • Jitter • … Reachability Analysis Formal Model Analog/Mixed Signal Circuit Guaranteed Safety Property 1. Hybridization -Partition State Space (on the fly) -Switching between  Hybrid System V C [V] I L [mA] 104 Reachability Analysis 1. Hybridization -Partition State Space (on the fly) -Switching between  Hybrid System 2. Overapproximation -Linear Hybrid Automata  Polyhedral enclosure of actual trajectories I L [mA] V C [V] vector field 105 Reachability Analysis • Efficiency through adapting partitions to dynamics overapproximation of complex polyhedra with simplified polyhedra • Good performance -Reachability with high accuracy in 72s, 127MB V C [V] I L [mA]\n\nPartition depending on dynamics\n\n• Run sequence of discrete transitions and time elapse• Execution run that starts in the initial states x 0 (t)x 1 (t)x 2 (t)\n\n4-Sequence Algorithm• Only transformations in R k and V k complexity independent of k no overapproximation necessary • Only Minkowski sum in S k and  k growing number of generators, but no longer transformed -O(Nn 3 ) instead of O(N 2 n 3 )"
}
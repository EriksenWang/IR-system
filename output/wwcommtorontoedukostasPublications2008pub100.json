{
    "title": "Vector edge operators for cDNA microarray spot localization",
    "publication_date": "1999",
    "authors": [
        {
            "full_name": "Rastislav Lukac",
            "firstname": "Rastislav",
            "lastname": "Lukac",
            "affiliations": [
                {
                    "organization": "Epson Canada Ltd",
                    "address": {
                        "city": "Epson Edge Toronto",
                        "country": "Canada",
                        "postcode": "M1W 3Z5"
                    }
                }
            ]
        },
        {
            "full_name": "Konstantinos N Plataniotis",
            "firstname": "Konstantinos N",
            "lastname": "Plataniotis",
            "affiliations": [
                {
                    "organization": "Department of ECE, The Edward S. Rogers Sr, University of Toronto",
                    "address": {
                        "city": "Toronto",
                        "country": "Canada",
                        "postcode": "M5S 3G4"
                    }
                }
            ]
        }
    ],
    "abstract": "This paper introduces a vector-based framework for edge detection and spot localization in cDNA microarray data. Since cDNA microarray images can be viewed as vector fields, both their spectral and spatial characteristics should be used to determine edges, discontinuities and structural elements. Building upon the powerful nature of nonlinear operators, the proposed vector edge operators can effectively localize microarray spots outperforming the commonly used scalar edge detectors. Moreover, due to the utilization of the principle of robust statistics, vector edge detectors are relatively immune to the noise present in microarray images. Simulation studies reported in this paper indicate that the proposed framework yields excellent performance and it can be readily incorporated in the cDNA microarray processing pipeline.",
    "full_text": "Microarray technology (Fig. 1) is a powerful tool used in the simultaneous expression of a large number of genes [1,2]. Microarrays are used to effectively analyze changes caused by carcinogens, reproductive toxins and genetic diseases in genome-wide patterns of gene expression in different populations of cells. Spotting of the deoxyribonucleic acid (DNA) obtained from the genes of interest is an essential element in the hybridization procedure used to pair the fluorescent complementary DNA (cDNA) to the spotted DNA. Using a Cy3/Cy5 system, scanning the control (Cy3) and the experimental channel (Cy5) at the ∼540 nm (green) and ∼630 nm (red), respectively, transforms cDNA microarrays to two-channel, red-green images (Fig. 1). The red (R) channel is used to indicate particular genes expressed as spots in the experimental channel while the green (G) portion of the signal denotes the spots corresponding to the control channel [3]. Yellow spots indicate the coincidence of genetic sequences, in other words, genes expressed in both the control and the experimental channel. The spots contain the essential information for microarray image analysis and gene expression tasks and thus, their localization and processing is of paramount importance in the cDNA microarray image processing pipeline. Note that irregularities in spot position and shape can propagate processing errors through subsequent analysis steps. The intensities of the pixels within a microarray spot are used to determine a single gene expression and to identify the genes expressed in a particular cell type [4,5].\n\nThe vast number of spots contained in microarray images necessitates the development of an automated image processing pipeline for localizing and processing them [6][7][8]. In such a system, edge detection operators seem to be the method of choice when it comes to spot localization [9,10]. Edge detectors allows for separating the spots from the background. It should be noted at this point that microarray images exhibit variations in intensity due to noise impairments which can be attributed to [7]: (i) variations in the image background, (ii) variations in the spot sizes and positions, (iii) artifacts caused by laser light reflection and dust on the glass slide, and (iv) photon and electronic noise introduced during scanning. Therefore, it is reasonable to suggest that an image filter should be used prior to applying a spot localization solution (Fig. 2). Due to the multichannel nature of cDNA microarray images, vector processing filters were introduced recently to remove noise and simultaneously preserve the structural information of the image [11]. Since residual noise may be present after the noise removal step [12], any spot localization tool should be: (i) immune against noise, (ii) able to extract edges accurately, (iii) robust in a variety of circumstances, and (iv) computationally efficient. It is the thesis of this paper that vector-based edge detection operators is the appropriate tool.\n\nEdge detection is a process, which uses the digital image as the input and transforms it into an edge map which can be viewed as a line drawing image with a spatial resolution identical to that of the input [13]. An intensity edge map corresponds to sudden changes in brightness which tend to occur at object boundaries and the locations of these changes reflect the shapes of objects. The most popular edge operators generate the edge maps by processing information contained in a local image neighborhood determined by an element of support. These operators (i) do not use any prior information about the image structure, (ii) are image content agnostic, and (iii) are localized, in the sense that the detector output is solely determined by the features obtained through the element of support [14,15].\n\nThe development of an efficient edge detector, which properly detects the objects' edges is a rather demanding task. Assuming scalar signals, such as gray-scale images, edges are commonly defined as physical, photometric and geometrical discontinuities in the image function, as physical edges often coincide with places of strong illumination and reflection changes [13]. In the image processing literature, edge information is often classified as: step edges, ramp edges and roof edges (Fig. 3). Since very often the image contrast is proportional to the scene illumination, identified edges are located in that part of the image where rapid image intensity changes take place. It is therefore reasonable to conclude that edges are the boundaries of distinct, in intensity, image regions.\n\nHowever, the definition of an edge in multichannel images is more complex. Compared to gray-scale images, multichannel images carry additional information contained in the various spectral channels. This information can be used to identify and detect edges in multichannel images such as the conventional color images (three channels) [11,13] or cDNA microarray images (two channels) [9,12]. In this case, the boundary between two surfaces with different properties can be determined in more than one way. For example, Fig. 4 depicts an step edge observed in a two-channel signal such as cDNA microarray images. Visual inspection of the presented example reveals that the edge formation can be attributed to intensity changes in one channel or in both channels simultaneously. This suggests that edge detection in cDNA microarray images can be proven to be a challenging task and edge operators should be designed to take advantage of the multichannel nature of the cDNA data [12]. In addition, it should be added that microarray images are nonlinear in nature due to presence of noise, spots and the variations between foreground and background. Thus, any applied solution should preserve important structural elements such as spot edges, and at the same time eliminate microarray image impairments [12]. To this end, we describe here a vector edge detection framework suitable for processing cDNA microarray data and capable of assisting in microarray spot localization and analysis tasks.\n\nThe rest of this paper is organized as follows. In Section 2, the conventional scalar edge operators are presented. The well-known, first-derivative and second-derivative based scalar detectors are discussed in detail. A vector-based detection framework suitable for edge detection and microarray spot localization is introduced in Section 3. Motivation and design characteristics are discussed in detail. In Section 4, the edge operators are tested using a variety of cDNA microarray images and com-  pared against the state-of-the-art methods. Finally, conclusions are drawn in Section 5.\n\nLet us consider, a K 1 × K 2 image x : Z 2 → Z 2 representing a two-dimensional matrix of two-component samples x (p,q) = [x (p,q)1 , x (p,q)2 ] with p = 1, 2, . . . , K 1 and q = 1, 2, . . . , K 2 denoting the image row and column, respectively. Following the modelling approach seen in [7,12], cDNA microarrays can be viewed as two-channel red-green (RG) images (Fig. 1). Components x (p,q)k , for k = 1, 2, represent the k th elements of the vectorial input x (p,q) with k = 1 indicating the R component and k = 2 indicating the G component. Thus, each two-channel sample x (p,q) is represented by a two-dimensional vector in the vector space [11]. Using a 3 × 3 sliding window W(p, q) = {x (i,j) ; (i, j) ∈ ζ} of finite size N = 9, where ζ = {(p -1, q -1), (p -1, q), . . . , (p + 1, q + 1)} denotes the spatial locations within the local neighborhood, the edge-detection procedure transforms the sample x (p,q) placed in the window center into an edge map pixel through a function of the samples listed in W(p, q), (Fig. 5). This window operator slides over the entire image, for p = 1, 2, . . . , K 1 and q = 1, 2, . . . , K 2 , to cover all the pixels in the microarray image [11,13].\n\nNote that the edge detectors which are currently used to process cDNA images are designed to operate on scalar-valued Fig. 5. Running supporting window W(p, q) sliding over the image domain. inputs. Since cDNA images are arrays of two-component vectors [11,12], scalar edge operators can only be used as follows:\n\n• Through dimensionality reduction, by converting the cDNA microarray image to a luminance-based image (Fig. 6).\n\nAssuming the conventional red-green-blue (RGB) representation [11,13], the aforementioned conversion is performed via L (p,q) = 0.299x (p,q)1 + 0.587x (p,q)2 + 0.114x (p,q)3 , thus rendering color as a gray-scale signal. Since the cDNA vectorial input x (p,q) denotes a two-component RG vector, which is equivalent to an RGB vector with the zero B component, the calculation of its corresponding luminance components L (p,q) reduces to L (p,q) = 0.299x (p,q)1 + 0.587x (p,q)2 , with (p, q) denoting the spatial location in the image. In the sequence, a scalar edge detector is applied on the luminance image:\n\nwhere f (•) denotes the operator defined over the local luminance quantities L (i,j) , for (i, j) ∈ ζ, with ζ denoting the area of support (Fig. 5). • Using component-wise processing (Fig. 7) [13]. In this way, each of the two cDNA image channels are processed separately. The operator then combines the two distinct edge maps to form the output map as:\n\nwhere m (p,q)1 = f (x (i,j)1 ; (i, j) ∈ ζ) and m (p,q)2 = f (x (i,j)2 ; (i, j) ∈ ζ) denote the edge maps obtained by applying the scalar edge detector on the R and G channel of the cDNA microarray image, respectively. The output edge description corresponds to the dominant indicator of the edge activity noticed in the different color bands.\n\nThe edge operator's output (1) or ( 2) is compared with a predefined threshold to obtain the edge map. In other words, the purpose of the thresholding operation is to determine if a given pixel belongs to an edge or not. The resulting edge map E(p, q) with the pixels E (p,q) ∈ E(p, q) is determined as follows:  where ξ is a nonnegative threshold value. It is known that edge operators are sensitive to noise and small variations in intensity, phenomena often encountered in localized image processing areas [15], and that the edge map usually contain noise. Using the appropriate setting of ξ, the thresholding operation ( 3) can extract the structural information which corresponds to the edge discontinuities. Note that an overshotted value of ξ results in edge information exclusions, whereas the use of too small value of ξ usually produces edge maps which include noise-like pixels and redundant details. Both component-wise and dimensionality reduction based edge detection operators can be further grouped into two main classes of operators [15]:\n\n• gradient methods, which use the first-order directional derivatives of the image to determine the edge contrast used in edge map formation, • zero-crossing based methods, which use the second-order directional derivatives to identify locations with zero crossings.\n\nThe gradient methods use the so-called gradient ∇S(p, q) = ∂S(p, q) ∂p , ∂S(p, q) ∂q of the function S(p, q). Based on the definition of an edge as an abrupt change in the image intensity, i.e. for s (i,j) ∈ S(p, q) denoting the luminance values in (1) or image channel intensity values in (2), a derivative operator was proposed for the detection of intensity discontinuities. Using first-order derivatives, it is possible to localize points where large changes of intensity occur (Fig. 8c). Of particular interest is the gradient magnitude In practice, first-order directional derivatives are approximated through the use of convolution masks. Assuming a 3 × 3 supporting window W, where each spatial location (i, j), for (i, j) ∈ ζ, is associated with the mask coefficient a (i,j) , the edge map's pixel m (p,q) is obtained as follows:\n\nwith ζ denoting the spatial locations within the area of support. The quantities s (i,j) ∈ S(p, q) and a (i,j) ∈ a(p, q) denote the image inputs and the mask coefficients, respectively. The S(p, q) denotes the set of the signal values used as the input for an edge operator, i.e. S(p, q) = {L (i,j) ; (i, j) ∈ ζ} for (1) and S(p, q) = {x (i,j)k ; (i, j) ∈ ζ, k = 1, 2} for (2). The set a(p, q) = {a (i,j) ; (i, j) ∈ ζ} forms the so-called set of mask coefficients. The mask of a particular operator should be considered a digital approximation of the gradient in a given direction. Typically, two masks are defined enabling the determination of the gradient magnitude in two orthogonal directions. Figs. 9-11 depict the 3 × 3 masks employed by the most commonly used scalar operators, namely the Prewitt, Sobel and isotropic operators, [16]. Another first-derivative operator is the so-called Canny operator (Fig. 12) [17], which is considered by many the most advanced gradient-based operator. This operator does not solely rely on the intensity variations, but attempts to limit the effect of the noise in order to improve the quality of the edge maps.\n\nIt is well-known that when the first derivative achieves a maximum, the second derivative is zero (Fig. 8d). Therefore, operators may localize edges by evaluating the zeros of the second derivatives of S(p, q). The most commonly used operator    of this type is the Laplacian operator\n\nThe mask definitions for the Laplacian operator are shown in Fig. 13, [18]. The so-called LwG, LoG, and DoG edge detectors which combine Laplacian and/or Gaussian kernels represent other operators designed within the zero-crossing based framework [14].\n\nNote that scalar edge operators do not use the full potential of the spectral image content. Therefore, the scalar edge detection procedures implemented using (1) or (2) can miss the edges in multichannel images [13].\n\nIt was argued in [12] that vector processing based techniques utilize the essential spectral information of the cDNA microarray image data and thus produce better results. Since cDNA images can be viewed as vector fields, edges can potentially be detected as differences in local vector statistics, which accurately reflect variations in spectral (color) information and spatial image content. Due to the utilization of the robust order-statistic principle, Fig. 13. Mask of the discrete Laplacian operator defined for the four and eightneighborhood.\n\nthe nonlinear vector operators can be less sensitive to noise compared to the conventional edge operators [13].\n\nEach input sample x (i,j) , located within a 3 × 3 window W(p, q) = {x (i,j) ;for (i, j) ∈ ζ}, is associated with a nonnegative value D i,j equal to the aggregated distances to other vectorial inputs located within W(p, q), [11,13]:\n\nwhere d(x (i,j) , x (g,h) ) denotes the distance or (dis)similarity measure between two vectorial inputs x (i,j) ∈ W(p, q) and x (g,h) ∈ W(p, q). Since each vector x (i,j) is uniquely determined by its magnitude M (i,j) = x (i,j) = (x (i,j)1 ) 2 + (x (i,j)2 ) 2 and direction O (i,j) = 1 x (i,j) x (i,j) = 1 M (i,j) x (i,j) in a vector space [11], it is reasonable to evaluate magnitude differences using the Euclidean metric (Fig. 14a): (6) and calculate differences in orientation using an angular measure such as (Fig. 14b):\n\nTo effectively quantify differences among cDNA vectors the operator should take into consideration both the magnitude and the orientation of the vectorial inputs. Depending on the nature of the distance (or similarity) measure used in calculating d(•, •), numerous edge operators with different performance characteristics can be obtained. To illustrate the potential of vector edge operators, the well-known Euclidean metric ( 6) is considered in the rest of paper.\n\nSince aggregated distances D i,j , for (i, j) ∈ ζ, are scalar quantities, they can be ordered according to their values resulting in the ordered set\n\nwhere D (r) ∈ {D i,j , (i, j) ∈ ζ}, for r = 1, 2, . . . , N, denotes the ordered item placed on the r-th rank. It will be shown in the sequence that the simultaneous utilization of vectors associated with the minimum D (1) (Fig. 15a) and the maximum D (N) (Fig. 15b) values can be used to localize the microarray spots and detect the image edges. Moreover, using the so-called vectororder statistics approach [11,13] we are able to built a family of vector edge operators which can be successfully incorporated in any existing microarray imaging/analysis pipeline.\n\nAssuming that the ordering of the aggregated distances D i,j in (8) implies the same ordering of the corresponding vectors x (i,j) , for (i, j) ∈ ζ, the following ordered set is produced:\n\nwhere x (r) ∈ W(p, q) denotes the r th vector order-statistics [11,13]. The lowest ranked vector x (1) which is associated with the minimum aggregated distances D (1) is the most typical sample for the vectorial set W. On the other hand the upper-most ranked vector x (N) corresponding to the maximum aggregated distances D (N) represents the vector deviating the most from the other vectors included in W(p, q).\n\nBased on these two extreme vector order-statistics x (1) and x (N) , the vector range (VR) detector is defined as follows:\n\nwhere (p, q) corresponds to the center spatial location of W(p, q). The output of (10) quantitatively expresses the deviation of the vector outlier in the highest rank from the most representative vector in the lowest rank within W(p, q). It is not difficult to see that in a uniform area, where all vectors x (i,j) , for (i, j) ∈ ζ, are characterized by a similar magnitude M (i,j) and/or the direction O (i,j) , the output of (10) will be small. However, this is not the case in high-frequency regions, where x (N) is usually located at the one side of an edge, whereas x (1) is included in the set of vectors occupying spatial positions on other side of the edge. Thus, the response of ( 10) is a large value. By thresholding m (p,q) through (3), the noise outputted in (10) can be removed and thus, more accurate edge map can be formed.\n\nDue to the utilization of the distance between the lowest and upper-most ranked vector, the VR operator is sensitive to noise. To overcome the VR operator's limitations a linear combination of the ordered vectors is used and the so-called vector dispersion edge detector (VDED) can be obtained: (11) where • denotes the magnitude of the vector operand and α r is the weight coefficient associated with ranked vector x (r) . By appropriately defining parameters α r , a number of edge operators can be obtained. example, the VR operator ( 10) is a special case of the VDED operator, obtained using α 1 = -1, α N = 1, and α r = 0, r = 2, 3, . . . , N -1. In order to design robust edge detectors, the operators should utilize a linear combination of the lowest ranked vectors x (r) , for r = 1, 2, . . . , c and c < N. This is mainly due to the fact the lowest ranks are associated with the most similar vectors in the population of the cDNA vectors whereas upper ranks usually correspond to the outlying samples [12]. Moreover, the lowest ranked vector is commonly used to attenuate noise in the vectorial data sets [13]. Therefore, employing the set of the c lowest, in rank, vectors x (1) , x (2) , . . . , x (c) , for c < N, the output of ( 11) becomes more immune to noise.\n\nAn operator exhibiting significant robustness against residual noise is the so-called minimum vector dispersion (MVD) operator defined as follows:\n\nwhere the parameters b and c control the trade-off between complexity and noise attenuation. Since the response of the MVD operator is much larger at the true edges, the highly-precise edge maps can be obtained through the subsequent thresholding (3).\n\nThe VR and MVD vector edge operators are compared, in terms of performance, with the most popular scalar operators, such as the Canny, Sobel and Laplacian detectors. In the application considered here, the scalar edge operators are implemented in a component-wise manner. Note that the Canny and Sobel operator are based on the first derivative of the intensity function, whereas the Laplacian operator utilizes its second derivative. The VR operator represents the simplest operator belonging to the family of vector edge operators. The MVD operator is selected to demonstrate the edge detection capability of more powerful members of the vector-based edge detectors. All aforementioned solutions operate on a 3 × 3 square window and they are used without the application of any pre-smoothing or pre-processing step. The microarray images used for testing purposes are shown in Fig. 16. Note that the cDNA samples vary in complexity and noise appearance in order to enable us to examine the robustness of the operators. In addition to the real cDNA microarray images, phantom images shown in Fig. 23 are utilized so that an objective evaluation of the proposed framework via the comparative evaluation of the produced edge maps and the ground truth images is possible.\n\nFigs. 17-19 facilitate the visual comparison of the edge maps obtained using conventional (scalar) and the proposed vector edge operators. The influence of the subsequent thresholding operations is examined as well. Fig. 17 shows the edge maps corresponding to the microarray image depicted in Fig. 16a. This input image contains moderate amount of noise in the G channel. Fig. 17a depicts the edge map produced by the Sobel operator. It can be seen that the Sobel operator is sensitive to noise, and that it had mistakenly characterized variations in the background as edge activity. Fig. 17e indicates that this undesirable effect can be decreased by appropriately adjusting the threshold value. Similarly to the Sobel detector, the Laplacian operator produces a noisy edge map (Fig. 17b), which can be modestly improved via thresholding (Fig. 17f). Contrary to this, visual inspection of the edge maps shown in Fig. 17c and d  Fig. 16. Examples of cDNA microarray images used for testing purposes. ray spots. Subsequent thresholding operations (Fig. 17g and h) may provide an improvement. The improvement afforded by thresholding the vector operator's output is smaller compared to that obtained in thresholded scalar operators. However, this is a testimony to the robustness and versatility of the vector operator. Please note that the setting of the thresholding values is heuristic in nature and the sensitivity of the scalar operator to the parameter setting is high. It is therefore reasonable to claim that a procedure that does not heavily rely on ad-hoc parameters should be preferred in an automated system intended to process vast amount of cDNA microarrays.\n\nThe edge maps shown in Fig. 18 correspond to the microarray image depicted in Fig. 16b. This input image contains a number of high-frequency impairments as well as strong background noise. Therefore, it is expected that the edge operators will produce worse results compared to those obtained in the previous  experiment. Fig. 18a and b indicate that noise impairments prevent conventional edge detectors from correctly localizing the spots. As is it shown in Fig. 18e and f, the subsequent thresholding operations produce low-quality edge-maps which can hardly be used in microarray analysis. However, using vector processing methods edge maps which contain significantly less false alarms can be obtained and the microarray spots can be readily identified (Fig. 18c, d, g and h).\n\nFig. 19 displays the edge maps obtained using the cDNA input shown in Fig. 16c. Since this microarray image contains the lowest amount of noise among the examples depicted in Fig. 16, it is expected that the examined edge operators should produce high-quality edge maps. However, visual inspection of the outputs shown in Fig. 19a and b suggests that the conventional operators fail in many local regions due to the numerous variations in the microarray image intensity. For the same reason the corresponding thresholded maps (Fig. 19e and f) contain noise. Fig. 19c, d and g, h display the edge maps and their thresholded versions, respectively, obtained using the proposed vector schemes. These examples clearly demonstrate that the vector edge operators avoid noise amplifications while clearly detect the spot edges. Thus, the outputted edge maps have a great value for the subsequent microarray analysis.\n\nFigs. 20-22 allow for subjective comparison of the edge detectors applied to pre-smoothed images. Since Gaussian presmoothing is an integral part of the Canny detector, the proposed methods can be objectively compared against this popular scalar technique. Visual inspection of the images suggests that the Canny operator usually produces the best results among the scalar edge detectors. However, the proposed vector edge operators outperform all scalar operators including the Canny edge detector. It is not difficult to see that the Canny operator is not capable of detecting spots in some difficult image regions, whereas the vector edge detectors produce clear spot contours. Moreover, Fig. 21 shows that unlike the proposed methods the Canny detector fails in microarray images contaminated by strong noise. Finally it should be noted that contrary to the usual procedure followed in scalar operators, vector edge operators do not produce maximum contrast maps and therefore, additional improvements can be obtained through contrast enhancement. Similarly to the final step employed in the Canny algorithm, the appearance of the edge maps can be further improved using the hysteresis based thinning of the thresholded edge maps.\n\nComparative evaluation of the results presented in Figs. 17-19 and those shown in Figs. 20-22 reveals that the use of a pre-smoother or a noise removal filter improves performance for both the scalar and vector edge detectors. These examples shown in Figs. 202122indicate that the quality of the edge maps depends on the filtering scheme applied prior to edge detection. Therefore, using the powerful vector filtering scheme of [12] further improvement can be obtained, as it can be seen by comparing images (g, h) to images (e, f) obtained using the Gaussian filter followed by the Sobel or the proposed MVD edge operator.\n\nTo allow for the objective comparisons of the scalar and vector edge detectors, phantom images shown in Fig. 23 are used in the sequel. First, the ground-truth edge maps such as one shown in Fig. 24a have been created from the original phantom images. Then, the phantom images have been corrupted using mixed noise, comprised of additive Gaussian noise and impulsive noise in order to generate the noisy images, with an Fig. 20. Results achieved using Fig. 16a: (a) Canny edge detector without edge thinning, (b) Canny edge detector, (c) Gaussian smoothing followed by Sobel edge operator, (d) Gaussian smoothing followed by Laplacian edge operator, (e) Gaussian smoothing followed by VR edge operator, (f) Gaussian smoothing followed by MVD edge operator, (g) vector filtering scheme of [12] followed by Sobel edge operator, and (h) vector filtering scheme of [12] followed by MVD edge operator. example shown in Fig. 24b. These noisy images have been subsequently used in the edge detection process to produce edge maps (see Fig. 24c) used in the comparative evaluation. Differences between the ground-truth images and the generated results have been measured pixel-by-pixel in terms of the correct classification and misclassification.\n\nExtensive experimentation, conducted on images corrupted with various amounts of additive Gaussian noise and impulsive noise showed that vector edge detectors outperform their scalar competition. In particular, vector edge detectors can achieve, in average, 15-25% higher correct classification and 5-15% lower misclassification rates than the scalar detectors. The difference, Fig. 21. Results achieved using Fig. 16b: (a) Canny edge detector without edge thinning, (b) Canny edge detector, (c) Gaussian smoothing followed by Sobel edge operator, (d) Gaussian smoothing followed by Laplacian edge operator, (e) Gaussian smoothing followed by VR edge operator, (f) Gaussian smoothing followed by MVD edge operator, (g) vector filtering scheme of [12] followed by Sobel edge operator, and (h) vector filtering scheme of [12] followed by MVD edge operator. Canny edge detector, (c) Gaussian smoothing followed by Sobel edge operator, (d) Gaussian smoothing followed by Laplacian edge operator, (e) Gaussian smoothing followed by VR edge operator, (f) Gaussian smoothing followed by MVD edge operator, (g) vector filtering scheme of [12] followed by Sobel edge operator, and (h) vector filtering scheme of [12] followed by MVD edge operator.  in terms of the edge detection performance, between scalar and vector solutions usually increases with the amount of imagecorruptive noise. This is due to the use of robust order statistics in the design of vector edge operators. Among the considered solutions, edge maps obtained using the MVD solution exhibit the highest similarity to the ground-truth edge maps whereas the worst results were usually achieved by the Laplacian detector.\n\nSummarizing the findings in the experimental comparisons performed, we can claim that:\n\n• The vector edge operators constitute a powerful framework which should be used in microarray analysis tasks. The proposed two-channel vector concept can be further extended to design new cDNA microarray spot localization tools. Its structure is flexible and allows to incorporate other distance (or similarity) measures for quantifying the differences between two vectorial inputs. • Vector edge operators use the essential spectral information and the differences in the local vector statistics reflecting the true variations in the spatial and spectral image characteristics to localize the microarray spots, and thus outperform any scalar-based solution.\n\n• Using the vector order-statistics the proposed edge operators are immune against noise and hold excellent performance in a wide range of application scenarios. Vector edge operators readily localize regular microarray spots, are able to detect the structural content in the cDNA vectorial fields and outperform the conventional edge detectors. • Employing a noise removal filter prior to applying the edge detector results in improved spot localization accuracy.\n\nThis paper introduced an edge detection framework which can be used to localize spots in cDNA microarray images. The proposed operators utilize vector order-statistics and the available spectral information to detect edge transitions in microarray images. Simulation results and comparisons reported here indicate that the vector edge operators are immune to noise, readily localize spots in cDNA data and outperform conventional edge operators producing edge-maps which uniquely describe the structural content of the cDNA microarray images. For this reason vector edge detectors should be considered an integral part of any microarray imaging pipeline."
}
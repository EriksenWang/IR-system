{
    "title": "SIMULATION OF MANEUVERING FLEXIBLE AIRCRAFT BY COUPLED MULTIBODY/CFD",
    "publication_date": "2005-07-01",
    "authors": [
        {
            "full_name": "Cavagna Luca",
            "firstname": "Cavagna",
            "lastname": "Luca",
            "affiliations": []
        },
        {
            "full_name": "Pierangelo †⋆",
            "firstname": "Pierangelo",
            "lastname": "†⋆",
            "affiliations": [
                {
                    "organization": "Dipartimento di Ingegneria Aerospaziale, Politecnico di Milano",
                    "address": {
                        "city": "Milano",
                        "country": "Italy",
                        "postcode": "20156"
                    }
                },
                {
                    "organization": "Aeronautics and Systems Integration, FOI (Swedish Defence Research Agency)",
                    "address": {
                        "city": "Kista Stockholm",
                        "country": "Sweden",
                        "postcode": "SE-164 90"
                    }
                }
            ]
        },
        {
            "full_name": "Masarati",
            "firstname": "",
            "lastname": "Masarati",
            "affiliations": [
                {
                    "organization": "Dipartimento di Ingegneria Aerospaziale, Politecnico di Milano",
                    "address": {
                        "city": "Milano",
                        "country": "Italy",
                        "postcode": "20156"
                    }
                }
            ]
        },
        {
            "full_name": "Giuseppe Quaranta",
            "firstname": "Giuseppe",
            "lastname": "Quaranta",
            "affiliations": [
                {
                    "organization": "Dipartimento di Ingegneria Aerospaziale, Politecnico di Milano",
                    "address": {
                        "city": "Milano",
                        "country": "Italy",
                        "postcode": "20156"
                    }
                }
            ]
        }
    ],
    "abstract": "This paper illustrates the application of Multibody System Dynamics (MSD) coupled to Computational Fluid Dynamics (CFD) for the aeroelastic analysis of detailed aircraft models undergoing arbitrary free flight motion. Computational AeroServoElasticity (CASE) requires the concurrent modeling of rather different aspects of aeromechanics, including rigid body dynamics, structural flexibility, fluid flow, servo-mechanisms for actuators. Considering all these issues within a single monolithic solver is particularly difficult, and possibly not worth the effort. An efficient alternative consists in building CASE modeling capability using independently developed software for each single domain: structure, fluid and mechanism analysis. The partitioned approach relies on dedicated software based on the most appropriate techniques to address the dynamics of each specific field. Efficiency is guaranteed since each subsystem can be modeled independently and only the time and spatial scales of interest are considered. Another advantage is the great flexibility in setting up the model: the designer can indeed choose the most appropriate tools, trading accuracy for computational costs, demanding for higher-order fidelity methods only when simplified ones cannot be applied, or their validation is required. The outcome of the combination of Multibody System Dynamics (MSD) and Computational Fluid Dynamics (CFD) is a prediction tool with a high level of accuracy, that can be crucial in the preliminary and intermediate design steps of unconventional configurations, for the investigation of loads, performance, stability and vibratory response of the vehicle at the boundaries of the flight envelope.",
    "full_text": "When the structure is sufficiently rigid, wide frequency separation results between modes dominated by rigid body degrees of freedom and those dominated by the elastic degrees of freedom. As a result, vehicle dynamic modelling, analysis and synthesis usually address either rigid body dynamics or the structural dynamics, but not both. When dealing with stability and control analysis and handling qualities investigations, a rigid body assumption is often made. On the other hand, when dealing with flutter, some or all the of the rigid body degrees of freedom are not included. With structural weight being minimized thanks to optimization procedures, composite materials being introduced and innovative layout being exploited, aeroelastic effects are becoming significant and the frequency separation between rigid body and elastic modes is being further reduced. This requires an integrated approach considering the model as flexible, which can eventually be simplified appropriately to suit the particular needs the application requires. An application to a complex example of High Altitude Low Endurance (HALE) flying wing aircraft is given by Patil and Hodges [1]; the dependence on the trim deformed shape for the phugoid mode which can become unstable is outlined. Different issues arise when the interaction between large rigid body motion and structural dynamics have to be combined. Many works since the first applications given by Ashley [2] and Milne [3,4] aimed at developing formulations as simple as possible, where under proper conditions which turned out to be too limiting, those dynamics could mutually be decoupled from an inertial point of view (being the aerodynamic coupling still present and impossible to obtain though). Most formulations lead to nonlinear models, given by the combination of nonlinear equations governing the rigid dynamics, and linear equations for the structure, often represented by its vibration modes. Usually these kind of models are relatively accurate and depending of the circumstances are still used, especially when it concerns control purposes. Applications can be found for example in Buttrill et al. [5], Waszak and Schmidt [6], Schmidt and Raney [7]. When it concerns flight stability and control, the model is linear also for the rigid body terms as it happens in classic flight mechanics.\n\nThe main issues arise when a unified formulation needs to be developed combining the different methodologies typical of each discipline, i.e. flight mechanics, structural dynamics, active controls, unsteady aerodynamics. Applications of such a unified approach can be found in Rodden and Love [8], Bianchin et al. [9], Baldelli et al. [10]. Linear flutter engineering models that incorporate translational and rotational rigid body degrees of freedom are not able to recover the traditional flight dynamic equations of motion because of the inherent conflicting modeling objectives. Among them, the finite element model coordinate system, the unsteady modeling of the aerodynamic forces using pure harmonic motion from classic Doublet Lattice Method, and the missing gravity-related terms in the aeroelastic formulation can be held accountable for the differences observed in the eigenvalues associated with the free longitudinal and lateral dynamic modes. In order to recover the stability axes formulation used in flight mechanics, a transformation process is usually required, which has been source of misunderstanding between flight mechanists and aeroelasticians; the structural rigid body modes are transformed into the airframe states so that the rigid body terms for the aeroelastic system have the same definition as those of the flight dynamics discipline. The report by Meijer and Zwaan [11] addresses this point. Furthermore, typical aircraft rigid body motions, like short period, phugoid, and Dutch roll, among others, have been described using quasi-steady aerodynamic forces, whereas the aeroelastic stability behavior is completely characterized by unsteady aerodynamic forces.\n\nNowadays, the coupling of fluid and structure dedicated solvers to carry out aeroelastic sim-ulation of maneuvers is a well-established research topic. The trend is towards the adoption of high fidelity methods, especially when it concerns the prediction of aerodynamic loads for highperforming machines featuring delta wings with vortex lift aerodynamic and separations. For these cases, significant phase shifts appear between the flexible maneuvering aircraft and the distribution of aerodynamic loads, demanding the integration of complex CFD models, flight and structural dynamics solvers. Applications can be found in the work presented by Fornasier et al. [12] and Schütte et al. [13] where different kinds of models are coupled, e.g. CFD, Finite Element (FE), MSD.\n\nThe latter is certainly one of most suitable and flexible solutions for this purpose; it allows the natural and straightforward introduction of flight mechanics into the aeroelastic simulation of free aircraft. The multibody formulation provides indeed an efficient representation of the combination of elastic motion and arbitrary rotations. It is particularly suitable for multiphysics simulations with different kinds of nonlinearities. It allows to include structural dynamics, servo-systems, controls, freeplay, friction and nonlinear constitutive laws in a single framework. Examples of aerospace applications can be found in [14,15,16].\n\nUsually the models adopted are reduced as much as allowed to correctly reproduce the physics of the problem. Often, they are quite simple, considerably smaller than those used for FE analysis. MSD allows to include deformability ranging from simple models with lumped masses and springs, Component Mode Synthesis (CMS), e.g. vibrations modes, static shapes, up to nonlinear finite elements. This makes MSD a suitable approach for preliminary design because of the medium level of complexity for the models. Examples of application of MSD to the analysis of the maneuvering aircraft can be found in Spieck et al. [17], Krüger et al. [18] where the coupling between a multibody solver and different low/high fidelity methods for aerodynamics is outlined.\n\nAmong the different methods which can be adopted to investigate the motion of flexible bodies, the floating frame of reference is adopted, focusing on developing a model for large amplitudes displacements for the rigid body degrees of freedom in body-reference axes not necessarily attached. While a body-fixed axis is commonly used for rigid bodies, a moving floating frame is commonly adopted for deformable bodies. It is worth mentioning that some of the concepts used in the floating frame formulation were originally presented in the aerospace literature.\n\nAs presented in Agrawal and Shabana [19], two sets of coordinates are used to describe the configuration of the deformable body: the motion of the reference frame is represented by a set of Cartesian coordinates and rotational parameters while the deformation of the body is described by a set of generalized coordinates with respect to its coordinate system. This last contribution can be directly given by FE, or reduced through CMS for example. Regardless of the amount of deformation, the dynamic equations of the deformable bodies that undergoes large rigid body displacements are highly nonlinear and exhibit a strong nonlinear coupling. Compared to the rigid case, modeling the deformation is of a major concern and the number of coordinates used in the analysis model in order to have a reasonable mathematical model may be relatively large. There are however, an infinite number of arrangements for the body axes of flexible components. A possible choice is represented by the Tisserand or Buckens (mean axes) frames. In order to define a unique displacement field, a set of reference conditions defining the nature of the body axes have to be imposed. The shape of deformation of the body is indeed defined in its coordinate system, and consequently, the selections of the deformation shapes and the body coordinate system cannot be considered as two independent issues. An application of the dynamic analysis based on Ritz method is given in the work by Wallrapp and Wiedemann [20] where the simulation of a deployment of a flexible solar array is outlined. In their work, the choice of a proper set of shape functions to represent the flexibility of the different components is addressed; different eigenmodes and static modes are selected using a modal participation factor criteria to improve the convergence of the method. As showed, the choice of the basis functions is not trivial since they strictly depend on the loading cases examined. In Wallrapp and Wiedemann [21] different choices for the basis functions are outlined, while in Schwertassek et al. [22] the mathematical formulation given by a combination of multibody and finite elements is outlined.\n\nMSD is a powerful tool for the analysis of mechanical systems. It allows to consider mechanism nonlinearities without any undue simplification, e.g. arbitrary rotations, contacts, material constitutive laws. It represents an ideal framework to consider multidisciplinary systems, where mechanical systems can be coupled to nonlinear servoactuators dynamics, freeplay, friction, flight control system dynamics or general state space systems [16]. The modeling of the arbitrary reference motion of the aircraft is delegated to the free multibody dynamics solver 'MBDyn' [23,24], which is also capable of modeling the structural deformation, either by CMS or by nonlinear finite element models [25].\n\nCFD is particularly useful when complex flow phenomena arise, e.g. moving shock waves (see Figure 1) or separations. It is a consolidated technology for aerodynamics analysis today. Its use is becoming more and more common in aeroservoelasticity as well, applied to deformable models of aircraft based on FE analysis, often reduced by CMS, or even on modal survey by Ground Vibration Testing (GVT) [26]. The CFD solver 'Edge' [27,28], developed by FOI (Swedish Defense Research Agency), is used to compute the unsteady aerodynamic loads adopting several models, ranging from Euler equations up to complex turbulent flows (RANS, DES, LES). The key aspect of applying CFD to aeroservoelasticity is related to efficiently perform, in terms of minimal computational cost, the aeroelastic computations in the time domain. In fact, unsteadiness may considerably add to the complexity of the fluid dynamics simulation. This is particularly true when unsteady maneuvering conditions need to be addressed, since the duration of the analysis may grow significantly; the time scale of maneuvers ranges from few seconds to minutes.\n\nThe formulation of each solver (implicit/explicit) and the way they are coupled to each other is of primary importance for this kind of multiphysics analyses. A tightly coupled approach is pursued in this work. It consists in bringing the mechanical and aerodynamic analyses to convergence simultaneously for each time step. This aspect can be quite important when significant structural deformation needs to be addressed (high aspect ratio configurations), when the frequency band of the structure, including control surface actuators, is relatively high. It becomes of paramount importance the introduction of numerical time lag and spurious work contribution must be strictly avoided.\n\nFinally, dealing with free-free deformable mechanisms requires the capability to describe the arbitrary global motion of the aircraft subjected to the total aerodynamics forces and moments, while keeping into account the deformability of the structure. In this respect, the introduction of a floating mean reference frame helps the designer in forcing the trajectory of the aircraft or to simply determine its gross motion while subjected to deformation. Different issues will be outlined, ranging from the problem of choosing the reference frame for the deformable aircraft up to conservation laws of fluids with deformable computational domains using the Arbitrary Lagrangian Eulerian (ALE) formulation (see Donea and Huerta [29] for example). The reference motion can be directly specified to the CFD solver as boundary condition on far-field surfaces or through ALE formulation; the structural deformation can be accounted by grid deformation exploiting again ALE formulation. An efficient alternative is represented by the modification of the velocity boundary conditions, according to the so-called \"transpiration\" method, under the assumption of limited structural deformation. The latter solution does not require CFD grid deformation, one of the most critical and time consuming tasks related to fluid dynamics computation, thus drastically improving the efficiency of the coupling. See the work by Fisher and Arena [30] for some application of the method in computational aeroelasticity based on CFD.\n\nThe structural modeling is delegated to the free general-purpose multibody solver MBDyn [23], developed at the Dipartimento di Ingegneria Aerospaziale of the University Politecnico di Milano. It is intended to model generic multidisciplinary problems, characterized by \"exact\" constrained rigid body dynamics, deformable components, either modeled as direct Finite Elements or through CMS, simplified aerodynamics, controls and more. The software is monolithic. It solves Initial Value Problems (IVP) in form of Differential-Algebraic Equations (DAE), using a family of multistep L-stable integration algorithms.\n\nThe dynamics of the rigid bodies is written in terms of Newton-Euler equations, constrained using the Lagrange's multipliers. The equations of motion of the i-th node are written in firstorder form by adding the definitions of the momentum, β i , and of the momenta moments, γ ix i , with respect to the position of the node, x i , namely\n\nwhere m i is the mass, ω i is the angular velocity, and s ix i and J ix i are the first-and second-order inertia moments. The equilibrium of each node yields βi = f i (2a)\n\nwhere f i and c ix i are all the forces and moments acting on the body, except those related to inertia. The moment equilibrium in Eq. ( 2b) is computed with respect to the node itself. The equations of motion of all the unconstrained nodes can be summarized as\n\nwhere q ∈ R n summarizes the n coordinates of the systemfoot_0 , M ∈ R n×n is the mass matrix, p ∈ R n summarizes the momentum and momenta moments, and f : R 3n+1 → R n summarizes the generic forces, possibly depending on the configuration of the system. When the system is subjected to kinematic constraints, the c constraint equations φ (q, t) : R n+1 → R c are added to Eqs. (3) using Lagrange's multipliers, resulting in\n\nEqs. (4) express the dynamics of a system constrained by holonomic rheonomic constraints. Their extension to the non-holonomic case is straightforward.\n\nWhen the dynamics of a node may be neglected, Eqs. (1) are omitted, and Eqs. (2) degenerate in\n\nThe corresponding nodes are termed 'static'; they may be useful to construct complex kinematic constraints by combining simpler ones, while neglecting the dynamics of internal nodes, thus saving equations and reducing the computational effort. These nodes play an important role when CMS is used to model deformable portions of the structure that need to interact with other elements in the MSD domain. The CMS approach is not described in detail, since it is a well consolidated technique to capture the dynamic behavior of large and complex deformable subsystems in a reduced order, yet extremely efficient model [31,32,33]. In the present case, for example, it is used to describe the dynamic behavior of an entire free flying aircraft using a limited number of Normal Vibration Modes (NVM). The model data are usually computed by synthesizing large FE models. However, data can be obtained even from GVT performed on the real aircraft, as in the case of this work.\n\nThe CMS model is based on a description of the kinematics that consists in superimposing an elastic motion, x, R, to an arbitrary rigid body motion, x O , R O , of the reference system the elastic motion is referred to. The motion of an arbitrary point j is\n\nWhen the elastic motion is expressed as the linear combinationfoot_1 of elastic modes u, namely\n\nDifferent approaches can be used to generate the equations of motion of the CMS element. The proposed formulation uses the Principle of Virtual Work (PVW), which consists in writing the contribution of the internal (i.e. elastic) and external (i.e. inertial and dead load) forces to the work done for a virtual motion (i.e. infinitesimal and compatible with the constraints at fixed time). Two main contributions result: one is associated to a virtual variation of the rigid body motion of the reference systemfoot_2 , δx O , θ Oδ , which accounts for the overall inertia of the system but implies no participation of the elastic forces; the other is associated to a virtual variation of the straining of the system, δu. In summary, the equations are\n\nSubmatrices M (•)(•) and the Coriolis and centrifugal contributions to the dynamics of the CMS component are usually expressed as functions of the so-called inertia invariants [31], which represent a series expansion of the inertia of the system in terms of the u. They allow to express the inertia forces as functions of the deformed state of the CMS component, provided appropriate information about the mass distribution is available. Submatrices M uu and K uu represent the reduced mass and stiffness of the deformable component. They are diagonal when NVM are used. Submatrices M xu and M θu represent the inertial coupling between the rigid body and the deformable motion. They vanish when the deformations Ψ are expressed in mean axes and the inertia properties do not depend on the deformed configuration.\n\nTo interact with the multibody domain, the CMS component needs to export its motion and receive forces at specific interface points. This is particularly useful, for example, to model the dynamics of aircraft control surfaces in the multibody domain, to be able to add the dynamics of hydraulic actuators, freeplay and other nonlinear phenomena. In order to minimize the software development effort, and to provide an interface as broad as possible, selected nodes of the CMS component can be marked as interface point. This results in adding constraint equations between their motion and that of corresponding multibody nodes. For example, the j-th CMS node interfaces with the i-th MSD node according to the 6 algebraic equations\n\nUnless one needs to add inertia forces in the multibody domain at the interface with a CMS component, static nodes can be proficiently used, thus requiring the addition of only 6 kinematic variables instead of the 12 required by a dynamic node.\n\nEdge is a parallelized CFD flow solver system for solving 2D/3D viscous/inviscid, compressible flow problems on unstructured grids with arbitrary elements. The code is developed and maintained by a team based at FOI and in collaboration with selected research partners, including the Dipartimento di Ingegneria Aerospaziale, Politecnico di Milano. The software is currently distributed as source code under a specific license with FOI. Further information about Edge is available on FOI's web site [27].\n\nAn edge-based, finite volume formulation is adopted. The control volumes are cells of a dual mesh, each of which contains a node of the primary grid where the unknowns are stored (see Figure 2). The dual mesh structure is generated by the Edge pre-processor. The pre-processor also performs agglomeration of control volumes into coarser grids for multigrid, and for parallel calculations the mesh is partitioned using an optimal domain decomposition method.\n\nEdge can be used for both steady state and time accurate calculations including manoeuvres (see Forsberg et al. [34]) and aeroelastic simulations (see Girodroux-Lavigne et al. [35]). Applications of the solver also consider advanced turbulence modelling (see Peng [36]), shape optimization and flow control (see Amoignon et al. [37]). An inviscid adjoint flow solver allows for gradient based shape optimization and mesh adaption techniques (see Tysell [38]). An overview of typical applications for the solver are reported in the recent paper by Eliasson and Weinerfelt [28]. Theoretical details about the numerical schemes available can be found in Eliasson [39].\n\nWithout any loss in generality, suppose that the fluid dynamics problem can be stated using an Arbitrary Lagrangian Eulerian (ALE) formulation to represent the motion of the fluid mesh. Further details can be found in Donea and Huerta [29]. The integral form of the compressible unsteady Euler equations for each control volume Ω i (t) with boundary ∂Ω i (t) subjected to deformation is\n\nwhere w = (ρ, m, E t ) T are the usual conservative variables density ρ, momentum m ∈ R 3 and total energy per unit volume E t ; F = (F x , F y , F z ) T ∈ R 5 → R 3 are the inviscid fluxes and ẋf (s, t) is the local velocity of the moving boundaries of the mesh elements, function of the curvilinear coordinate s. The term w ẋf accounts for the flux contribution due to the movement of the control volume. Eq. ( 10) is also valid for the limit case of fixed grid with ẋf = 0 and a volume Ω i (t) constant with time. The flux function is defined as\n\nwhere I is the 3 × 3 identity matrix and p is the pressure. For the more general Navier-Stokes model the diffusive fluxes must be added. The scalar product in Eq. ( 10) is computed as F•dS = F x dS x + F y dS y + F z dS z , with dS(s, t) the outward normal with respect to the volume Ω i (t).\n\nThe discrete formulation for Eq. ( 10) reads:\n\nwhere T i is the set of nodes k sharing a portion of their boundary with the volume of node i, S ik is the integrated outward normal the couple of node ik (see Figure2(a)), i.e. S ik = ∂Ω ik (t) dS i (s, t) and µ ik is the integrated interface velocity µ ik = ∂Ω ik (t) ẋf • dS i (s, t). In order to have a numerical scheme to be stable the grid velocities µ ik and the grid-dependent geometric quantities, such as for example the volume associated with the finite volume of the integrated outward normals, are to be computed according to suitable consistency conditions, usually referred as Geometric Conservation Law (see the work by Thomas and Lombard [40]). The numeric flux Φ can be evaluated in different ways within Edge, using central schemes with additional dissipation and Roe flux difference splitting. According to piece-wise representation of finite-volumes, the term Φ ∂ , accounting for the flux boundary contribution on the frontiers of the computational domain (see Figure2(b)), is simply\n\nFor the case of slip wall boundary, w i is updated so that the component of fluid velocity normal to the boundary equals the velocity of the boundary. Finally, the flow equations are integrated explicitly using a multi-stage Runge-Kutta scheme with convergence acceleration by agglomeration multigrid and implicit residual smoothing. Time-accurate solutions are obtained using an implicit dual time-stepping technique with explicit sub-iterations and a three-point Backward Differences Formulae (BDF)\n\nwith the unsteady residual\n\nand the constant source term\n\nThe stationary solution of Eq. ( 14) corresponds to the flow variables at the new time level, i.e. w * = w n+1 . Since the residual is driven to zero at steady state in pseudo time, i.e. d(•) dτ = 0, Eq. ( 12) is fulfilled. During iterative solution in the pseudo-time, data are exchanged with the MSD solver (see Section 6) in order to have a fully-coupled approach resulting in overall convergence of the monolithic system.\n\nThe computational domain needs to be updated to correctly follow the structural deformed shape. This usually requires interpolation (see for example Bartels [41], de Boer et al. [42]), or mesh-deformation techniques (see Cavagna et al. [26], Zeng and Ethier [43]) in order to propagate the displacement of the moving boundaries through all the internal mesh. Accomplishing this task is usually computational demanding and not trivial, since mesh distorsion and invalidation must be prevented.\n\nHowever, dating back to classic linear panel methods, a naïve approach referred as transpiration exists which avoids, the complex task of mesh-deformation in the cases of small structural displacements. The first application in aeroelastic analysis based on CFD were applied to Full Potential and Euler codes. Several aeroelastic applications can be found in Fisher and Arena [30], Stephens et al. [44,45], and Gao et al. [46], where the transpiration boundary condition is used as a linearised first-order wall boundary condition under the assumption of relatively small deformations. An additional benefit of this kind of approach relyes in aeroservoelasticity, where control surfaces modelling is fundamental and whose modelling inside the CFD domain is not trivial. If narrow gaps are modelled, the number of elements in the domain is of course raised and problems in mesh deformations may arise. If the control surface is incorporated into the wing boundary, a mesh shearing problem can result along the boundary edges the surfaces share. This phenomenon can lead to highly distorted grids and loss of mesh refinement in an area where flow gradients are effectively high. A solution of the aforementioned problem which keeps the computational costs as low as possible and avoids complex and expensive overset methods (CHIMERA grids), is represented by a combination of sliding and deforming meshes. See the work presented in Cavagna et al. [47] for further details.\n\nThe implementation of the transpiration boundary condition is straightforward. Considering a deforming structure as sketched in Fig. 3, each wall boundary is subjected to a normal variation from S u to S d when its nodes undergo a displacement in the body reference frame x. This contribution can be defined as geometric transpiration contribution and must be considered everytime the structural motion implies a change in normal direction. Thus, when using inviscid fluid models, the new deformed shape can be simulated by enforcing flow tangency of the flow velocity v i by means of the unitary deformed normal vector S id / S id\n\nThe original normal vector S iu is used for boundary integrals and fluxes calculations in Eq. ( 13).\n\nSince normal tangency is applied on the deformed normal and the grid is actually not modified, a non-null normal component now results. In this context the wall can be considered as blower/injector according to the direction of the non-null normal component. Thus the transpiration is simply an approximated method, in that it provides the CFD solver a deflection of its boundaries even if the mesh is actually untouched. Further, for unsteady simulations a second term needs to be considered, defined as kinematic transpiration contribution which is due to body velocity ẋ. Adding this new contribution to the previous expression leads to\n\nFinally, considering also the contribution due to the reference motion, the normal velocity reads\n\nThe no-flow condition through the physical boundary is applied again along the deformed normal direction which depends both on structural deformation and rigid body deflections. In this way it is possible to use the transpiration boundary condition to simulate aeroelastic effects for the maneuvered flight. The adoption of a linear model undergoing small displacements by hyphotesis, together with the mean-axes formulation as adopted in the present work, make the transpiration method suitable for the examples considered below. It is worth stressing mean axes shapes ease the applicability of the transpiration method avoiding local violations of Eq. ( 19) when evaluated along the undeformed normal S iu ; they indeed minimize the squares of the relative displacements in a global sense (see the work by Canavin and Likins [48]).\n\nFigure 4 shows an application of the transpiration boundary condition to account for antisymmetric aileron deflection. It is possible to qualitatively denote the variation in terms of local pressure distribution.\n\nGiven the dynamic state of the moving boundaries, stresses due to aerodynamic loads applied on the wet surfaces are determined. When dealing with multi-disciplinary problems, proper coupling conditions must be considered. Denoting σ s and σ f as the structural and viscous flow tensor, these conditions for a continuous system are:\n\nThe first condition states the dynamic equilibrium of stress along the common boundary interface Γ, while the other two state the kinematic compatibility conditions 4 . However, the two fields are solved resorting to a discrete approximation based on finite approximation of the functional space under which the solutions fall. Consequently, a discrete approximation for Eq. ( 20) must be derived, retaining the conservation properties of the original problem, i.e. conservation of mass, momentum and energy exchanged along Γ. The conservation is trivially retained when the two domains have matching discrete interfaces and compatible approximation spaces. However, in realistic applications, the fluid and structure meshes are not compatible, featuring different discretizations according to spatial resultion requirements typical of each discipline. A classic scheme proposed by Maman and Farhat [49] uses structural shape functions N i for the structural node i to determine the generalized nodal forces on the element e as f (e) i = Γ (e) s N i (-p I + σ f ) • dS.\n\n(\n\nThe integral is evaluated by Gauss quadrature rules along Γ s , the structural representation of Γ, thus requiring pressure and viscous stresses to be recovered at the Gauss points of each structural element. These values can be recovered inside each fluid element using their shape functions (see Fig. 5(a)). Unfortunately this method, which can be sufficiently accurate in many cases, cannot be labeled as conservative, because it does not guarantee that the sum of the discrete loads f i is exactly equal to the fluid loads. Moreover, when major geometric discrepancies are present between the two models, the structural Gauss points may not belong to the aerodynamic interface, leading toward incorrect evaluations. Similar methods based on element shape functions are proposed by Cebral and Löhner [50], Xiangmin and Heath [51]. In these cases a double interpolant (one from the structural to the aerodynamic model, and one from the aerodynamic to the structural model) is used. On the other hand, methods referred as alternative interpolation introduce a new set of basis functions, different from those used in the numerical scheme. Beckert [52] introduces iso-parametric interpolation finite elements of different orders to transfer data between the aerodynamic and structural solution, stressing the importance of conservation of the data exchanged and adopting a single interpolant.\n\nTo guarantee the conservation between the two models, the correct strategy consists in enforcing the coupling conditions only in a weak sense, through the use of simple variational principles. Using the Virtual Works principle the energy exchange can be investigated [49]. Let δx f and δx s be two admissible virtual displacements for each field, the fluid and the structure. \"Admissible\" means that the trace of the displacement, i.e. the restriction to the boundary in the appropriate functional space used by each solver, must be equal\n\nThe relation between the two admissible virtual displacements can be written as\n\nwith δx f i the discrete values of δx f on fluid nodes and h ij the coefficients of a generic interpolation matrix H. Introducing the shape functions N i belonging to the approximate space of the aerodynamic field, the virtual displacement is\n\nEquating the virtual works along the aerodynamic and structural domains\n\nand defining the nodal forces on the CFD domain as\n\nThe nodal loads f f i for each CFD boundary grid point are computed using the correct approximation space adopted in the CFD solver. Finally, it follows\n\nstating the loads on the structural nodes f s j can be obtained by multiplying f f i by the transpose of the interface matrix H used to connect the displacements of the two grids. The problem of conservation is shifted on the definition of the correct interface matrix H, which is still unknown. To build a conservative interface matrix enforcing the compatibility Eq. ( 22), a weak/variational formulation can be used again. The idea is to express the problem as a weighted least-square problem\n\nwhere φ is a weight function. The method used to solve this problem should ideally have these additional properties: a) computational efficiency; b) correct smoothness of the resulting surface; c) quality of reproduction.\n\nA solution with all these qualities can be obtained using Moving Least Squares (MLS) technique [53,54]. The problem is mathematically stated as follows. Given a compact space Ω ⊆ R n , the object of the analysis is the reconstruction of a function f ∈ C d (Ω) from its values f (x 1 ), f (x 2 ), . . . , f (x N ) on scattered distinct centres X = {x 1 , x2 , . . . , xN }. Of course, it is not necessary to derive an analytical expression for f ; it is sufficient to have an efficient method to compute the value of f on a different set of centres Y = {x 1 , x 2 , . . . , x N }. For our purposes the X set corresponds to the structural nodes while the Y set includes the CFD boundary nodes. The method uses local approximations of f expressed as sum of monomial basis functions\n\nwhere m is the number of basis functions, and a i (x) are their coefficients. P d ⊆ C d (Ω) is a finite dimensional space of basis functions; usually it is spanned by polynomials, but other functions can be adopted. The coefficients a i (x) are obtained by performing a weighted least square fit for the approximation f\n\nwith the constraint that the local approximation f is expressed in terms of the known position of local centres belonging to X as\n\nThe coefficients a i (x) are computed using for f Eq. ( 31), which is equivalent to Eq. ( 29) when x = xi . Consequently the local approximation f(x) with these coefficients a i (x) exactly recovers the data at the known centres xi . This equation is completely equivalent to Eq. ( 28) which expresses the compatibility condition on the displacements. In this case the displacements on the fluid grid are represented by the unknown function f. The great advantage of casting the problem in this form is that it can be localised by choosing compact support weight functions such as smooth non-negative Radial Basis Functions (RBFs) [55]. Usually the weight RBF are written as φ(r/δ), where delta is a scaling factor that allows to change the function support at different space centres. The parameter δ allows the user to adapt the support radius to the problem, being sure that enough points are covered, and points far away have no influence (see Fig. 5(b)). Eq. (30) does not correspond to a simple interpolation of the function values for the given centres. An interpolation can be obtained only if weight functions with a singularity on the diagonal are used, so that φ(0) = 0, a choice which is rather unusual but possible. This is a result of the fact that we started from a conservation principle, so the point values must be viewed as integral quantities that are distributed on a different set of nodal points. Being conservative, the present scheme satisfies the classical patch test [56], so a constant pressure distribution is transmitted exactly, regardless of the discretisation used by the two meshes.\n\nThe coupling of the two solvers is called 'tight' since they iterate during convergence at each time step. The coupling algorithm is: When the CFD solver converges, it stops waiting for geometry information and sending loads information. The MSD solver iterates until convergence using the last set of loads received. Variants of this schema consist in performing sub-iterations between each communication phase.\n\nIn the current implementation, the information exchange between the MSD and the CFD solvers consists in:\n\n• the linear and angular velocity, ẋO and ω O , and the orientation matrix, R O , of the reference rigid body motion of the CMS element;\n\n• the value of the modal variables, u, and their time derivative, u.\n\nThe CFD solver takes care of mapping the motion described by the CMS element kinematics into the appropriate boundary conditions for the CFD analysis. The information exchange between the CFD and the MSD solvers consists in:\n\n• the overall force and moment applied to the rigid body dynamics equations of the CMS element; • the generalized forces that apply to the generalized dynamics equations of the CMS element.\n\nThe CFD solver takes care of computing the resultant forces and moments, and the generalized forces from the pressure distribution.\n\nFrom the MSD standpoint, the interface is relatively general. The current implementation is file-based. A native exchange format in textual form, and a format specifically designed to interoperate with Edge's file primitives have been designed and implemented.\n\nThe file-based communication can be easily extended to a socket-based one, allowing distributed simulation. Right now this is not considered critical, since the computational cost of the MSD analysis is a fraction of that of the CFD analysis. As a consequence, the two processes can live on a single machine, possibly multi-processor, or exploit a networked file system.\n\nAn analogous interface has been designed to allow the coupling at the node level. This would allow the direct coupling of nonlinear FE structural models with CFD models.\n\nA well-known three-dimensional standard aeroelastic configuration is considered here to validate the whole procedure: the AGARD 445.6 weakened wing which was tested in the transonic wind-tunnel at NASA Langley. The wing semispan model is made of laminated mahogany, with NACA 65A004 airfoil, a quarter-chord sweep angle of 45 deg. , an aspect ratio of 1.65 and a taper ratio of 0.66. To reduce the stiffness, the wing was weakened by holes drilled through it and filled with foam. In this section we refer to the weakened model number 3 since all flow conditions (subsonic, transonic and supersonic) were tested. Further data concerning the models, test setups and conditions are reported in Yates [57].\n\nThe structural model is represented by the first four normal undamped modes. The first two are primarily involved in the flutter mechanism, identified respectively as first bending and first torsional modes. Figure 6 shows the computational domain used for Euler calculations with approximately 1 million of tetrahedral elements and 227 thousands nodes. For this simple application of a simple isolated wing without control surfaces, mesh deformation is used exploiting the capabilities of the flow solver. The MSD model consists of a grounded modal element, whose deformability is considered through the vibration modes in clamped condition determined during the experimental survey. Modal frequencies are 9.5992, 38.1650, 48.3482 and 91.5482 Hz. The experimental flutter point at the subsonic flight regime M ∞ = 0.678 is assessed by means of the coupled MSD-CFD model. An interface point in the structural model is defined at the trailing edge of the wint tip; an harmonic excitation is then applied in this point given. The stability of the system is incurred by examining the damped or diverging response. Being the airfoil symmetric and the reference condition at null angle of attack, the trim reference condition is trivial and does not need to be determined. The experimental flutter point occurs at a flight speed of 231.37 m/s with a dynamic pressure of 4710 Pa. The numerical model features undamped oscillation at the same flight point as depicted in Figure 7(a),7(b). When a lower dynamic pressure of 3327 Pa is considered at the same Mach number, resulting in a smaller unsteady generalized forces, the system is stable and results in damped oscillations as depicted in Figure7(c),7(d). This process can be iteratively repeated and the dynamic pressure adjusted until the critical value between damped and undamped response is determined.\n\nIn the current study, an experimental modal based model, obtained from Ground Vibration Test (GVT), is used to represent the structure of the Piaggio P180foot_4 in unconstrained conditions. Through the modal appropriation technique (see the book by Ewins [58]), the first 39 deformable modes were identified in terms of mode shape, generalized mass, frequency and damping. The experiment measured the free-free modes by means of very soft elastic suspen- sions. A total number of 159 uniaxial accelerometers arranged on each aerodynamic surface, nacelle and fuselage as reported in Table 1 were used. They were laid in order to measure the component of the acceleration normal to the lifting surfaces; the displacements along this direction are of course fundamental in order to mainly characterize the mode shape.\n\nOn the other hand, one of the major issues relies in the fact the available measured data provide an incomplete displacement field since only some components of the motion are available. Thus, the shape functions have discontinuities which are particularly problematic along the lines of intersection of the different surfaces. This may turn out to be troublesome in CFD computations, since of course, the adoption of such field of displacements leads to surface crossing and hence mesh invalidation, i.e. negative volumes and highly distorted cells. When it concerns aeroelastic analysis based on aerodynamic potential methods, normal displacements are the contribution which directly concur to the definition of aerodynamic loads. The same can be said when transpiration boundary condition is used within a CFD framework, allowing only for normal contributions to be taken into account on the original undeformed mesh. However, to solve the incompatibility problem, a reconstruction of the whole displacement field from their separate components available on the different items is required. Also, to improve this process and in particular the smoothness of the reconstruction, several intermediate nodes are added to the original mesh of 159 accelerometers. Figure 8 depicts the final structural model used to perform aeroelastic analyses, where green points represent the accelerometers location, while red and blue ones represent the new added points, respectively on fuselage, aerodynamic surfaces, nacelles and propeller group. The nodes on the area of the propellers are introduced in order to take into account the deflection of the disk boundary condition in the CFD analysis so that thrust orientation can be considered.\n\nFigure 9 shows some details of the CFD mesh used for Euler calculations. The complete aircraft is modelled, despite symmetric flow conditions are considered in the following examples; 1.5 millions of tetrahedral cells are used with approximately 300 thousands nodes. Finally, Figure 10 shows few mode shapes interpolated along the CFD wall boundaries.  flight reference condition pitch joint elevator deflection pitch rotation F res F a M res CG mg x y z ψ δe V 0 Figure 11: Sketch of the numeric experiment.\n\nThe solution of the trim problem is iteratively sought in a manner similar to an experimental wind-tunnel survey as outlined in Fig. 11. The model is pinned along its principal pitch axis. A revolute hinge allows a relative rotation ψ respect to the flow field, thus resulting in a modification of its angle of attack. A deflection of the elevator δe is then used to guarantee the final equilibrium of vertical force and pitch moment. The absolute path of the aircraft is imposed to be horizontal respect to the ground (absolute reference frame) and gravity is assumed to act along absolute vertical axes. The aircraft is considered as trimmed when vertical reaction force F res and pitch hinge moment M res are null. In this case, the effect of thrust on the trim configuration is neglected and a non-null horizontal reaction appear. When the revolute hinge rotates, the new velocity ẋ(n) O of the body in the moving reference frame is given to the CFD solver which converts it into nodal mesh velocities as if the aircraft were moving respect to still air and ground. A dummy elevator mode is created, i.e. an artificial mode with unitary rigid elevator rotation keeping the rest of the aircraft as fixed. Structural displacements and elevator deflection are then accounted for in the same manner through the transpiration boundary condition. A similar approach to the method proposed in Raveh et al. [59] is carried out.\n\nAs outlined in Fig. 12, the iterative process is made of three different nested iteration-levels: a) at the basic level, the CFD and CSM codes iteratively solve for own system of equations until convergence on flow and mechanical solution is reached; b) at the medium level, part of coupling process outlined in Section 6 is carried out, staggering the update of reference and elastic coordinates. Considering the variables giving the motion of the aircraft ẋ(n) O and its controls δ(n) in the body reference frame as frozen, the deformed trim shape for the current configuration is sought. A fixed-point iterative process is carried out:\n\nuntil an equilibrium point between elastic and aerodynamic forces dependent on the assumed structural configuration is found. To avoid excessive overshoots, relaxation is usually introduced. The inertial-relief effect is implicitly included when generalized aerodynamic forced are determined, being Ψ mean axes shapes. Following the approach given in Eq. ( 32), the Jacobian of the generalized aerodynamic forces K a uu (usually referred as aerodynamic stiffness matrix) with respect to elastic coordinates is not required, implicitly assuming the structural configuration in not in a static aeroelastic divergence condition, i.e. det (K uu -K a uu ) = 0, and these terms are small when compared to the stiffness matrix K uu . Once a convergence on the deformed shape is reached, a maneuver trim loop adjusts controls and aircraft attitude to have the static equilibrium position. In this simple case, a dummy controller is set up in the MSD solver starting from a linearisation of aerodynamic forces. Corrections to elevator deflection δe and aircraft joint pitch angle ψ are determined as:\n\nwhere ∆F = {F res , M res } and J a ψ, δ is the matrix with aerodynamic derivatives of vertical aerodynamic force f z and pitch moment m y with respect to pitch and elevator deflection\n\nThese values may be known experimentally or through the CFD solver. Being aerodynamic loads non-linear, a sampling campaign to determine a database for each configuration point is required, usually based on computationally expensive finite-differences.  Including aeroelastic effects on these derivatives using the CFD solver leads to further computational costs. Thus for this simple application, the term J a ψ, δ is never updated and determined once for all starting from the undeformed reference condition of null pitch and elevator deflection. Of course, this results in a slower convergence for trim corrections. Nevertheless the approximation introduced is motivated by the hyphotesis of small structural deflections and a good guess starting point. c) the outer-most level simply indicates the k th trim iteration and is executed until overall convergence of reference and elastic coordinates is reached.\n\nA user-defined number of 10 explicit iterations for the CFD solved are used at level a); 10 steps are used to update both reference and elastic coordinates for the two iterative loops at the medium level b). Thus each trim iteration is carried out using 2000 explicit iterations for the CFD solver. Figure 13(a) briefly reports the angle of attach ψ and elevator deflection δe at trim iterations. A guess value is given at the first iteration; at the second iteration the trim solution for the rigid aircraft is determined after which elastic iterations are carried out. Figure 13(b) shows the residual of vertical force and moment acting on the revolute hinge during within each trim iteration. As said above, each 10 adjustments are allows within each trim iteration. After approximately 8 global iterations, the solution of the problem is achieved. Concerning the elastic solution, Figure 14(a) summarizes the value of modal displacements at each trim iteration; Figure 14(b) reports modal displacements at each inner adjustment, showing that, a part from the first condition, 10 iterations for elastic updating are too many; convergence is indeed reached well before. The difference on the trim condition when including deformability is clear: for the inertial configuration and flight speed considered, the angle of attack required for the body reference frame considered is negative and the deflection of the elevator is approximately null. As expected, when aeroelastic trim is considered, a higher angle of attack is required to balance the negative torsional twist which leads to a local reduced angle of attack. To counter-balance the pitching aerodynamic moment, the elevator is deflected upward so that a negative downlift is generated. The final deformed shape is depicted in Figure 15(a); wing surfaces are bent upward while tail empennages are bent downward. Figure 15(b) shows the difference in chord-wise pressure distribution for the rigid and deformable trim configurations. The intensity of the shock is reduced and its position is moved up flow. Figure 16 shows the difference of pressure distribution for the rigid and deformable cases at trim cruise flight. The change in pressure distribution along the horizontal tail to allow having a trim flight is clear.\n\nThe coupled procedure has been applied to the analysis of the P180 aircraft during trim and transient flight conditions. In detail, a symmetric flight condition has been considered, to reduce the complexity of the problem. The reference flight condition is Mach 0.75 at sea level. The real aircraft cannot operate at this flight condition; however, it may be representative of flutter clearance analysis. It was selected to ensure there is a developed shock wave on the wings.\n\nAn incrementally complex problem has been considered:\n\n• the aircraft is first trimmed in a desired flight condition, by computing the pitch and elevator settings for level flight;\n\n• an elevator transient starting from the trimmed flight condition is considered, with the aircraft constrained by a revolute joint about the pitch axis;\n\n• the same elevator transient is considered, with the aircraft constrained only by symmetry 0 1 2 3 4 5 6 -0.1 0 0.1 0.2 0.3 0.4 0.5 0.6 δe [deg] t [s] (a) Elevator deflection 0 1 2 3 4 5 6 -2 -1 0 1 2 0 1 2 3 4 5 6 -2 -1.5 -1 -0.5 0 ψ [deg] ψ [deg/s] t [s] t [s] (b) Pitch rotation and rate Figure 17: Responses for the pinned case. constraints (vertical and longitudinal displacement, pitch rotation); the thrust resulting from the trim analysis is modeled by a 'follower' force. The trim analysis is discussed in Section 8.1. The elevator transient consists in a smoothed step, illustrated in Figure 17(a). The model constrained by a revolute hinge about the pitch axis responds with the pitch motion of Figure 17(b). The initial pitch is completely recovered when the control input is removed. This analysis shows the stability of the 'short-period' (pitch) motion of the model. The free model, on the contrary, ends up in an almost steady descent, as illustrated by Figures 18(b) and 19.\n\nThe motion of the aircraft should evolve into a 'phugoid' transient (altitude/horizontal speed oscillation). However, the duration of the period is much longer than what one would expect to capture with this type of analysis. Note that from an aeroelastician's point of view, such a long period allows to analyze the problem using quasi-steady or even steady approximations of the aerodynamic loads instead of the unsteady CFD analysis considered in  this work.\n\nThe paper presented the tightly coupled CFD-MSD analysis of the aeroelastic behavior of a transonic aircraft. This type of problems requires the use of sophisticate fluid-dynamics models, in order to capture the relevant dynamic effects of unsteady transonic flow, including aerodynamic loads that depend on unsteady compressibility effects.\n\nThe work-preserving coupling algorithm between the fluid and the structure is illustrated. The efficiency of the CFD solver (FOI's Edge) and the versatility of the MSD solver (MBDyn) allowed to implement a tight coupling procedure. As a consequence, the structural and the fluid dynamic problems are solved simultaneously, exchanging boundary conditions at each iteration of an implicit nonlinear solution procedure.\n\nThe results of trim and transient analysis applied to realistic aerodynamic and structural models of the aircraft show the soundness of the proposed procedure. This preliminary development phase of the coupling did not significantly focus on efficiency. As explained, a fixed number of iterations were set during the different sub-cycles of the trim process and a simple relaxation technique during each exchange was applied. As for the maneuver solution, a fixed number of exchanges during each time-step was considered. Future developments will improve\n\nFor the sake of conciseness, this notation overlooks the fact that the variables that express angular rates are not the derivatives of the orientation parameters, namely ω i = ax( Ṙi R T i ), which is not the time derivative of the orientation parameters.\n\nThe resulting matrix Rj is only a first-order approximation of an orientation matrix.\n\nThe virtual variation of the reference orientation is δR O = θ Oδ × R O .\n\nFor inviscid flows, the last equation is replaced by a condition on normal velocities: ∂ ẋs ∂n =∂ ẋf ∂n\n\nCourtesy of Piaggio Aero S.p.A."
}